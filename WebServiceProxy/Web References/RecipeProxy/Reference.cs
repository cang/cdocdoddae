//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4952.
// 
#pragma warning disable 1591

namespace WebServiceProxy.RecipeProxy {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RecipeSoap", Namespace="http://siglaz.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Error))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class Recipe : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RecipeListToDatasetOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecipeNameByKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecipeByKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecipeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRawDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRecipeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertRecipeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertRecipeForceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRecipeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecipeIsEditedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetRecipeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextRecipeKeyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Recipe() {
            this.Url = "http://cdo/DDAWebService/Recipe.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RecipeListToDatasetCompletedEventHandler RecipeListToDatasetCompleted;
        
        /// <remarks/>
        public event RecipeNameByKeyCompletedEventHandler RecipeNameByKeyCompleted;
        
        /// <remarks/>
        public event GetRecipeByKeyCompletedEventHandler GetRecipeByKeyCompleted;
        
        /// <remarks/>
        public event RecipeListCompletedEventHandler RecipeListCompleted;
        
        /// <remarks/>
        public event GetRawDataCompletedEventHandler GetRawDataCompleted;
        
        /// <remarks/>
        public event DeleteRecipeCompletedEventHandler DeleteRecipeCompleted;
        
        /// <remarks/>
        public event InsertRecipeCompletedEventHandler InsertRecipeCompleted;
        
        /// <remarks/>
        public event InsertRecipeForceCompletedEventHandler InsertRecipeForceCompleted;
        
        /// <remarks/>
        public event UpdateRecipeCompletedEventHandler UpdateRecipeCompleted;
        
        /// <remarks/>
        public event GetStatusCompletedEventHandler GetStatusCompleted;
        
        /// <remarks/>
        public event UpdateStatusCompletedEventHandler UpdateStatusCompleted;
        
        /// <remarks/>
        public event CanDeleteCompletedEventHandler CanDeleteCompleted;
        
        /// <remarks/>
        public event RecipeIsEditedCompletedEventHandler RecipeIsEditedCompleted;
        
        /// <remarks/>
        public event ResetRecipeStatusCompletedEventHandler ResetRecipeStatusCompleted;
        
        /// <remarks/>
        public event GetNextRecipeKeyCompletedEventHandler GetNextRecipeKeyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/RecipeListToDataset", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult RecipeListToDataset() {
            object[] results = this.Invoke("RecipeListToDataset", new object[0]);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRecipeListToDataset(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RecipeListToDataset", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndRecipeListToDataset(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void RecipeListToDatasetAsync() {
            this.RecipeListToDatasetAsync(null);
        }
        
        /// <remarks/>
        public void RecipeListToDatasetAsync(object userState) {
            if ((this.RecipeListToDatasetOperationCompleted == null)) {
                this.RecipeListToDatasetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecipeListToDatasetOperationCompleted);
            }
            this.InvokeAsync("RecipeListToDataset", new object[0], this.RecipeListToDatasetOperationCompleted, userState);
        }
        
        private void OnRecipeListToDatasetOperationCompleted(object arg) {
            if ((this.RecipeListToDatasetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecipeListToDatasetCompleted(this, new RecipeListToDatasetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/RecipeNameByKey", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RecipeNameByKey(int key) {
            object[] results = this.Invoke("RecipeNameByKey", new object[] {
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRecipeNameByKey(int key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RecipeNameByKey", new object[] {
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRecipeNameByKey(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RecipeNameByKeyAsync(int key) {
            this.RecipeNameByKeyAsync(key, null);
        }
        
        /// <remarks/>
        public void RecipeNameByKeyAsync(int key, object userState) {
            if ((this.RecipeNameByKeyOperationCompleted == null)) {
                this.RecipeNameByKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecipeNameByKeyOperationCompleted);
            }
            this.InvokeAsync("RecipeNameByKey", new object[] {
                        key}, this.RecipeNameByKeyOperationCompleted, userState);
        }
        
        private void OnRecipeNameByKeyOperationCompleted(object arg) {
            if ((this.RecipeNameByKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecipeNameByKeyCompleted(this, new RecipeNameByKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetRecipeByKey", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DDARecipe GetRecipeByKey(int key) {
            object[] results = this.Invoke("GetRecipeByKey", new object[] {
                        key});
            return ((DDARecipe)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRecipeByKey(int key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRecipeByKey", new object[] {
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public DDARecipe EndGetRecipeByKey(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DDARecipe)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecipeByKeyAsync(int key) {
            this.GetRecipeByKeyAsync(key, null);
        }
        
        /// <remarks/>
        public void GetRecipeByKeyAsync(int key, object userState) {
            if ((this.GetRecipeByKeyOperationCompleted == null)) {
                this.GetRecipeByKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecipeByKeyOperationCompleted);
            }
            this.InvokeAsync("GetRecipeByKey", new object[] {
                        key}, this.GetRecipeByKeyOperationCompleted, userState);
        }
        
        private void OnGetRecipeByKeyOperationCompleted(object arg) {
            if ((this.GetRecipeByKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecipeByKeyCompleted(this, new GetRecipeByKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/RecipeList", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RecipeListResult RecipeList() {
            object[] results = this.Invoke("RecipeList", new object[0]);
            return ((RecipeListResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRecipeList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RecipeList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public RecipeListResult EndRecipeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RecipeListResult)(results[0]));
        }
        
        /// <remarks/>
        public void RecipeListAsync() {
            this.RecipeListAsync(null);
        }
        
        /// <remarks/>
        public void RecipeListAsync(object userState) {
            if ((this.RecipeListOperationCompleted == null)) {
                this.RecipeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecipeListOperationCompleted);
            }
            this.InvokeAsync("RecipeList", new object[0], this.RecipeListOperationCompleted, userState);
        }
        
        private void OnRecipeListOperationCompleted(object arg) {
            if ((this.RecipeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecipeListCompleted(this, new RecipeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetRawData", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BinaryResult GetRawData(long key) {
            object[] results = this.Invoke("GetRawData", new object[] {
                        key});
            return ((BinaryResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRawData(long key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRawData", new object[] {
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public BinaryResult EndGetRawData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BinaryResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetRawDataAsync(long key) {
            this.GetRawDataAsync(key, null);
        }
        
        /// <remarks/>
        public void GetRawDataAsync(long key, object userState) {
            if ((this.GetRawDataOperationCompleted == null)) {
                this.GetRawDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRawDataOperationCompleted);
            }
            this.InvokeAsync("GetRawData", new object[] {
                        key}, this.GetRawDataOperationCompleted, userState);
        }
        
        private void OnGetRawDataOperationCompleted(object arg) {
            if ((this.GetRawDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRawDataCompleted(this, new GetRawDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/DeleteRecipe", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultBase DeleteRecipe(long key) {
            object[] results = this.Invoke("DeleteRecipe", new object[] {
                        key});
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteRecipe(long key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteRecipe", new object[] {
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultBase EndDeleteRecipe(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRecipeAsync(long key) {
            this.DeleteRecipeAsync(key, null);
        }
        
        /// <remarks/>
        public void DeleteRecipeAsync(long key, object userState) {
            if ((this.DeleteRecipeOperationCompleted == null)) {
                this.DeleteRecipeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRecipeOperationCompleted);
            }
            this.InvokeAsync("DeleteRecipe", new object[] {
                        key}, this.DeleteRecipeOperationCompleted, userState);
        }
        
        private void OnDeleteRecipeOperationCompleted(object arg) {
            if ((this.DeleteRecipeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRecipeCompleted(this, new DeleteRecipeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/InsertRecipe", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultBase InsertRecipe(DDARecipe _recipe) {
            object[] results = this.Invoke("InsertRecipe", new object[] {
                        _recipe});
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertRecipe(DDARecipe _recipe, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertRecipe", new object[] {
                        _recipe}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultBase EndInsertRecipe(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public void InsertRecipeAsync(DDARecipe _recipe) {
            this.InsertRecipeAsync(_recipe, null);
        }
        
        /// <remarks/>
        public void InsertRecipeAsync(DDARecipe _recipe, object userState) {
            if ((this.InsertRecipeOperationCompleted == null)) {
                this.InsertRecipeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRecipeOperationCompleted);
            }
            this.InvokeAsync("InsertRecipe", new object[] {
                        _recipe}, this.InsertRecipeOperationCompleted, userState);
        }
        
        private void OnInsertRecipeOperationCompleted(object arg) {
            if ((this.InsertRecipeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRecipeCompleted(this, new InsertRecipeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/InsertRecipeForce", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultBase InsertRecipeForce(DDARecipe _recipe) {
            object[] results = this.Invoke("InsertRecipeForce", new object[] {
                        _recipe});
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertRecipeForce(DDARecipe _recipe, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertRecipeForce", new object[] {
                        _recipe}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultBase EndInsertRecipeForce(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public void InsertRecipeForceAsync(DDARecipe _recipe) {
            this.InsertRecipeForceAsync(_recipe, null);
        }
        
        /// <remarks/>
        public void InsertRecipeForceAsync(DDARecipe _recipe, object userState) {
            if ((this.InsertRecipeForceOperationCompleted == null)) {
                this.InsertRecipeForceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRecipeForceOperationCompleted);
            }
            this.InvokeAsync("InsertRecipeForce", new object[] {
                        _recipe}, this.InsertRecipeForceOperationCompleted, userState);
        }
        
        private void OnInsertRecipeForceOperationCompleted(object arg) {
            if ((this.InsertRecipeForceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRecipeForceCompleted(this, new InsertRecipeForceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/UpdateRecipe", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultBase UpdateRecipe(DDARecipe _recipe) {
            object[] results = this.Invoke("UpdateRecipe", new object[] {
                        _recipe});
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateRecipe(DDARecipe _recipe, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateRecipe", new object[] {
                        _recipe}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultBase EndUpdateRecipe(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRecipeAsync(DDARecipe _recipe) {
            this.UpdateRecipeAsync(_recipe, null);
        }
        
        /// <remarks/>
        public void UpdateRecipeAsync(DDARecipe _recipe, object userState) {
            if ((this.UpdateRecipeOperationCompleted == null)) {
                this.UpdateRecipeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRecipeOperationCompleted);
            }
            this.InvokeAsync("UpdateRecipe", new object[] {
                        _recipe}, this.UpdateRecipeOperationCompleted, userState);
        }
        
        private void OnUpdateRecipeOperationCompleted(object arg) {
            if ((this.UpdateRecipeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRecipeCompleted(this, new UpdateRecipeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetStatus", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public eRecipeStatus GetStatus(int recipeKey) {
            object[] results = this.Invoke("GetStatus", new object[] {
                        recipeKey});
            return ((eRecipeStatus)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStatus(int recipeKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStatus", new object[] {
                        recipeKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public eRecipeStatus EndGetStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((eRecipeStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusAsync(int recipeKey) {
            this.GetStatusAsync(recipeKey, null);
        }
        
        /// <remarks/>
        public void GetStatusAsync(int recipeKey, object userState) {
            if ((this.GetStatusOperationCompleted == null)) {
                this.GetStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusOperationCompleted);
            }
            this.InvokeAsync("GetStatus", new object[] {
                        recipeKey}, this.GetStatusOperationCompleted, userState);
        }
        
        private void OnGetStatusOperationCompleted(object arg) {
            if ((this.GetStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusCompleted(this, new GetStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/UpdateStatus", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateStatus(int recipeKey, eRecipeStatus status) {
            this.Invoke("UpdateStatus", new object[] {
                        recipeKey,
                        status});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateStatus(int recipeKey, eRecipeStatus status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateStatus", new object[] {
                        recipeKey,
                        status}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateStatus(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateStatusAsync(int recipeKey, eRecipeStatus status) {
            this.UpdateStatusAsync(recipeKey, status, null);
        }
        
        /// <remarks/>
        public void UpdateStatusAsync(int recipeKey, eRecipeStatus status, object userState) {
            if ((this.UpdateStatusOperationCompleted == null)) {
                this.UpdateStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateStatus", new object[] {
                        recipeKey,
                        status}, this.UpdateStatusOperationCompleted, userState);
        }
        
        private void OnUpdateStatusOperationCompleted(object arg) {
            if ((this.UpdateStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/CanDelete", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanDelete() {
            object[] results = this.Invoke("CanDelete", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCanDelete(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CanDelete", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCanDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanDeleteAsync() {
            this.CanDeleteAsync(null);
        }
        
        /// <remarks/>
        public void CanDeleteAsync(object userState) {
            if ((this.CanDeleteOperationCompleted == null)) {
                this.CanDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanDeleteOperationCompleted);
            }
            this.InvokeAsync("CanDelete", new object[0], this.CanDeleteOperationCompleted, userState);
        }
        
        private void OnCanDeleteOperationCompleted(object arg) {
            if ((this.CanDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanDeleteCompleted(this, new CanDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/RecipeIsEdited", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RecipeIsEdited(int recipeKey) {
            object[] results = this.Invoke("RecipeIsEdited", new object[] {
                        recipeKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRecipeIsEdited(int recipeKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RecipeIsEdited", new object[] {
                        recipeKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndRecipeIsEdited(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RecipeIsEditedAsync(int recipeKey) {
            this.RecipeIsEditedAsync(recipeKey, null);
        }
        
        /// <remarks/>
        public void RecipeIsEditedAsync(int recipeKey, object userState) {
            if ((this.RecipeIsEditedOperationCompleted == null)) {
                this.RecipeIsEditedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecipeIsEditedOperationCompleted);
            }
            this.InvokeAsync("RecipeIsEdited", new object[] {
                        recipeKey}, this.RecipeIsEditedOperationCompleted, userState);
        }
        
        private void OnRecipeIsEditedOperationCompleted(object arg) {
            if ((this.RecipeIsEditedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecipeIsEditedCompleted(this, new RecipeIsEditedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/ResetRecipeStatus", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetRecipeStatus() {
            this.Invoke("ResetRecipeStatus", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginResetRecipeStatus(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ResetRecipeStatus", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndResetRecipeStatus(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ResetRecipeStatusAsync() {
            this.ResetRecipeStatusAsync(null);
        }
        
        /// <remarks/>
        public void ResetRecipeStatusAsync(object userState) {
            if ((this.ResetRecipeStatusOperationCompleted == null)) {
                this.ResetRecipeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetRecipeStatusOperationCompleted);
            }
            this.InvokeAsync("ResetRecipeStatus", new object[0], this.ResetRecipeStatusOperationCompleted, userState);
        }
        
        private void OnResetRecipeStatusOperationCompleted(object arg) {
            if ((this.ResetRecipeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetRecipeStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetNextRecipeKey", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetNextRecipeKey(int recipeid, bool onelevel) {
            object[] results = this.Invoke("GetNextRecipeKey", new object[] {
                        recipeid,
                        onelevel});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNextRecipeKey(int recipeid, bool onelevel, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNextRecipeKey", new object[] {
                        recipeid,
                        onelevel}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetNextRecipeKey(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNextRecipeKeyAsync(int recipeid, bool onelevel) {
            this.GetNextRecipeKeyAsync(recipeid, onelevel, null);
        }
        
        /// <remarks/>
        public void GetNextRecipeKeyAsync(int recipeid, bool onelevel, object userState) {
            if ((this.GetNextRecipeKeyOperationCompleted == null)) {
                this.GetNextRecipeKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextRecipeKeyOperationCompleted);
            }
            this.InvokeAsync("GetNextRecipeKey", new object[] {
                        recipeid,
                        onelevel}, this.GetNextRecipeKeyOperationCompleted, userState);
        }
        
        private void OnGetNextRecipeKeyOperationCompleted(object arg) {
            if ((this.GetNextRecipeKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextRecipeKeyCompleted(this, new GetNextRecipeKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class DataSetResult : Error {
        
        private System.Data.DataSet resultField;
        
        private int totalRowField;
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public int TotalRow {
            get {
                return this.totalRowField;
            }
            set {
                this.totalRowField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResultBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BinaryResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RecipeListResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSetResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class Error {
        
        private ErrorCode codeField;
        
        private string descriptionField;
        
        /// <remarks/>
        public ErrorCode Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public enum ErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        UNKNOWN_ERROR,
        
        /// <remarks/>
        NO_DATA,
        
        /// <remarks/>
        INVALID_SQL_STATEMENT,
        
        /// <remarks/>
        NO_AUTHORIZED,
        
        /// <remarks/>
        NO_DATA_TO_ANALYZE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class DDARecipe {
        
        private int signatureCodeField;
        
        private string testerTypeField;
        
        private bool breakWhenFoundField;
        
        private int recipeKeyField;
        
        private string recipeNameField;
        
        private int sCKeyField;
        
        private string signatureNameField;
        
        private int prevRecipeKeyField;
        
        private string prevRecipeNameField;
        
        private byte[] rawDataField;
        
        private string descriptionField;
        
        private eRecipeStatus statusField;
        
        /// <remarks/>
        public int SignatureCode {
            get {
                return this.signatureCodeField;
            }
            set {
                this.signatureCodeField = value;
            }
        }
        
        /// <remarks/>
        public string TesterType {
            get {
                return this.testerTypeField;
            }
            set {
                this.testerTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool BreakWhenFound {
            get {
                return this.breakWhenFoundField;
            }
            set {
                this.breakWhenFoundField = value;
            }
        }
        
        /// <remarks/>
        public int RecipeKey {
            get {
                return this.recipeKeyField;
            }
            set {
                this.recipeKeyField = value;
            }
        }
        
        /// <remarks/>
        public string RecipeName {
            get {
                return this.recipeNameField;
            }
            set {
                this.recipeNameField = value;
            }
        }
        
        /// <remarks/>
        public int SCKey {
            get {
                return this.sCKeyField;
            }
            set {
                this.sCKeyField = value;
            }
        }
        
        /// <remarks/>
        public string SignatureName {
            get {
                return this.signatureNameField;
            }
            set {
                this.signatureNameField = value;
            }
        }
        
        /// <remarks/>
        public int PrevRecipeKey {
            get {
                return this.prevRecipeKeyField;
            }
            set {
                this.prevRecipeKeyField = value;
            }
        }
        
        /// <remarks/>
        public string PrevRecipeName {
            get {
                return this.prevRecipeNameField;
            }
            set {
                this.prevRecipeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] RawData {
            get {
                return this.rawDataField;
            }
            set {
                this.rawDataField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public eRecipeStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public enum eRecipeStatus {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Running,
        
        /// <remarks/>
        Edited,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class ResultBase : Error {
        
        private long id64Field;
        
        private int id32Field;
        
        private short id16Field;
        
        private string idstringField;
        
        /// <remarks/>
        public long id64 {
            get {
                return this.id64Field;
            }
            set {
                this.id64Field = value;
            }
        }
        
        /// <remarks/>
        public int id32 {
            get {
                return this.id32Field;
            }
            set {
                this.id32Field = value;
            }
        }
        
        /// <remarks/>
        public short id16 {
            get {
                return this.id16Field;
            }
            set {
                this.id16Field = value;
            }
        }
        
        /// <remarks/>
        public string idstring {
            get {
                return this.idstringField;
            }
            set {
                this.idstringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class BinaryResult : Error {
        
        private byte[] resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class RecipeListResult : Error {
        
        private DDARecipe[] recipesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Recipes")]
        public DDARecipe[] Recipes {
            get {
                return this.recipesField;
            }
            set {
                this.recipesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void RecipeListToDatasetCompletedEventHandler(object sender, RecipeListToDatasetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecipeListToDatasetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecipeListToDatasetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void RecipeNameByKeyCompletedEventHandler(object sender, RecipeNameByKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecipeNameByKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecipeNameByKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetRecipeByKeyCompletedEventHandler(object sender, GetRecipeByKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecipeByKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecipeByKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DDARecipe Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DDARecipe)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void RecipeListCompletedEventHandler(object sender, RecipeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecipeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecipeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RecipeListResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RecipeListResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetRawDataCompletedEventHandler(object sender, GetRawDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRawDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRawDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BinaryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BinaryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteRecipeCompletedEventHandler(object sender, DeleteRecipeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRecipeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRecipeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultBase Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultBase)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void InsertRecipeCompletedEventHandler(object sender, InsertRecipeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertRecipeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertRecipeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultBase Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultBase)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void InsertRecipeForceCompletedEventHandler(object sender, InsertRecipeForceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertRecipeForceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertRecipeForceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultBase Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultBase)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateRecipeCompletedEventHandler(object sender, UpdateRecipeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRecipeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRecipeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultBase Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultBase)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetStatusCompletedEventHandler(object sender, GetStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public eRecipeStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((eRecipeStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CanDeleteCompletedEventHandler(object sender, CanDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void RecipeIsEditedCompletedEventHandler(object sender, RecipeIsEditedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecipeIsEditedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecipeIsEditedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ResetRecipeStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetNextRecipeKeyCompletedEventHandler(object sender, GetNextRecipeKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextRecipeKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextRecipeKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591