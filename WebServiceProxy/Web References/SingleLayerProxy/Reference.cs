//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4952.
// 
#pragma warning disable 1591

namespace WebServiceProxy.SingleLayerProxy {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SingleLayerSoap", Namespace="http://siglaz.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Error))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSourceRecipe))]
    public partial class SingleLayer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetResultThumbnailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultThumbnailFlatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultRawDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSingleLayerPagingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHintDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSurfaceHasSignatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultBySurfaceKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultBySurfaceKey1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultByResultDetailKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalRow_SingleLayerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalRow_SurfaceHasSignatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSignatureParetoChartOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSignatureParetoChartIndividualResource_TestCellOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultThumbnail1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultThumbnailFlat1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultRawData1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSingleLayerPaging1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHintData1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSurfaceHasSignature1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultBySurfaceKey2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultBySurfaceKey3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultByResultDetailKey1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalRow_SingleLayer1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalRow_SurfaceHasSignature1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSignatureParetoChart1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSignatureParetoChartIndividualResource_TestCell1OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SingleLayer() {
            this.Url = "http://localhost/DDAWebService/SingleLayer.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetResultThumbnailCompletedEventHandler GetResultThumbnailCompleted;
        
        /// <remarks/>
        public event GetResultThumbnailFlatCompletedEventHandler GetResultThumbnailFlatCompleted;
        
        /// <remarks/>
        public event GetResultRawDataCompletedEventHandler GetResultRawDataCompleted;
        
        /// <remarks/>
        public event GetSingleLayerPagingCompletedEventHandler GetSingleLayerPagingCompleted;
        
        /// <remarks/>
        public event GetHintDataCompletedEventHandler GetHintDataCompleted;
        
        /// <remarks/>
        public event GetSurfaceHasSignatureCompletedEventHandler GetSurfaceHasSignatureCompleted;
        
        /// <remarks/>
        public event GetResultBySurfaceKeyCompletedEventHandler GetResultBySurfaceKeyCompleted;
        
        /// <remarks/>
        public event GetResultBySurfaceKey1CompletedEventHandler GetResultBySurfaceKey1Completed;
        
        /// <remarks/>
        public event GetResultByResultDetailKeyCompletedEventHandler GetResultByResultDetailKeyCompleted;
        
        /// <remarks/>
        public event GetTotalRow_SingleLayerCompletedEventHandler GetTotalRow_SingleLayerCompleted;
        
        /// <remarks/>
        public event GetTotalRow_SurfaceHasSignatureCompletedEventHandler GetTotalRow_SurfaceHasSignatureCompleted;
        
        /// <remarks/>
        public event GetSignatureParetoChartCompletedEventHandler GetSignatureParetoChartCompleted;
        
        /// <remarks/>
        public event GetSignatureParetoChartIndividualResource_TestCellCompletedEventHandler GetSignatureParetoChartIndividualResource_TestCellCompleted;
        
        /// <remarks/>
        public event GetResultThumbnail1CompletedEventHandler GetResultThumbnail1Completed;
        
        /// <remarks/>
        public event GetResultThumbnailFlat1CompletedEventHandler GetResultThumbnailFlat1Completed;
        
        /// <remarks/>
        public event GetResultRawData1CompletedEventHandler GetResultRawData1Completed;
        
        /// <remarks/>
        public event GetSingleLayerPaging1CompletedEventHandler GetSingleLayerPaging1Completed;
        
        /// <remarks/>
        public event GetHintData1CompletedEventHandler GetHintData1Completed;
        
        /// <remarks/>
        public event GetSurfaceHasSignature1CompletedEventHandler GetSurfaceHasSignature1Completed;
        
        /// <remarks/>
        public event GetResultBySurfaceKey2CompletedEventHandler GetResultBySurfaceKey2Completed;
        
        /// <remarks/>
        public event GetResultBySurfaceKey3CompletedEventHandler GetResultBySurfaceKey3Completed;
        
        /// <remarks/>
        public event GetResultByResultDetailKey1CompletedEventHandler GetResultByResultDetailKey1Completed;
        
        /// <remarks/>
        public event GetTotalRow_SingleLayer1CompletedEventHandler GetTotalRow_SingleLayer1Completed;
        
        /// <remarks/>
        public event GetTotalRow_SurfaceHasSignature1CompletedEventHandler GetTotalRow_SurfaceHasSignature1Completed;
        
        /// <remarks/>
        public event GetSignatureParetoChart1CompletedEventHandler GetSignatureParetoChart1Completed;
        
        /// <remarks/>
        public event GetSignatureParetoChartIndividualResource_TestCell1CompletedEventHandler GetSignatureParetoChartIndividualResource_TestCell1Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetResultThumbnail_DDADB", RequestElementName="GetResultThumbnail_DDADB", RequestNamespace="http://siglaz.com", ResponseElementName="GetResultThumbnail_DDADBResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetResultThumbnail_DDADBResult", DataType="base64Binary")]
        public byte[] GetResultThumbnail(long resultDetailKey) {
            object[] results = this.Invoke("GetResultThumbnail", new object[] {
                        resultDetailKey});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetResultThumbnail(long resultDetailKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetResultThumbnail", new object[] {
                        resultDetailKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetResultThumbnail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResultThumbnailAsync(long resultDetailKey) {
            this.GetResultThumbnailAsync(resultDetailKey, null);
        }
        
        /// <remarks/>
        public void GetResultThumbnailAsync(long resultDetailKey, object userState) {
            if ((this.GetResultThumbnailOperationCompleted == null)) {
                this.GetResultThumbnailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultThumbnailOperationCompleted);
            }
            this.InvokeAsync("GetResultThumbnail", new object[] {
                        resultDetailKey}, this.GetResultThumbnailOperationCompleted, userState);
        }
        
        private void OnGetResultThumbnailOperationCompleted(object arg) {
            if ((this.GetResultThumbnailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultThumbnailCompleted(this, new GetResultThumbnailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetResultThumbnailFlat_DDADB", RequestElementName="GetResultThumbnailFlat_DDADB", RequestNamespace="http://siglaz.com", ResponseElementName="GetResultThumbnailFlat_DDADBResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetResultThumbnailFlat_DDADBResult", DataType="base64Binary")]
        public byte[] GetResultThumbnailFlat(long resultDetailKey) {
            object[] results = this.Invoke("GetResultThumbnailFlat", new object[] {
                        resultDetailKey});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetResultThumbnailFlat(long resultDetailKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetResultThumbnailFlat", new object[] {
                        resultDetailKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetResultThumbnailFlat(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResultThumbnailFlatAsync(long resultDetailKey) {
            this.GetResultThumbnailFlatAsync(resultDetailKey, null);
        }
        
        /// <remarks/>
        public void GetResultThumbnailFlatAsync(long resultDetailKey, object userState) {
            if ((this.GetResultThumbnailFlatOperationCompleted == null)) {
                this.GetResultThumbnailFlatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultThumbnailFlatOperationCompleted);
            }
            this.InvokeAsync("GetResultThumbnailFlat", new object[] {
                        resultDetailKey}, this.GetResultThumbnailFlatOperationCompleted, userState);
        }
        
        private void OnGetResultThumbnailFlatOperationCompleted(object arg) {
            if ((this.GetResultThumbnailFlatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultThumbnailFlatCompleted(this, new GetResultThumbnailFlatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetResultRawData_DDADB", RequestElementName="GetResultRawData_DDADB", RequestNamespace="http://siglaz.com", ResponseElementName="GetResultRawData_DDADBResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetResultRawData_DDADBResult", DataType="base64Binary")]
        public byte[] GetResultRawData(long resultDetailKey) {
            object[] results = this.Invoke("GetResultRawData", new object[] {
                        resultDetailKey});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetResultRawData(long resultDetailKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetResultRawData", new object[] {
                        resultDetailKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetResultRawData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResultRawDataAsync(long resultDetailKey) {
            this.GetResultRawDataAsync(resultDetailKey, null);
        }
        
        /// <remarks/>
        public void GetResultRawDataAsync(long resultDetailKey, object userState) {
            if ((this.GetResultRawDataOperationCompleted == null)) {
                this.GetResultRawDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultRawDataOperationCompleted);
            }
            this.InvokeAsync("GetResultRawData", new object[] {
                        resultDetailKey}, this.GetResultRawDataOperationCompleted, userState);
        }
        
        private void OnGetResultRawDataOperationCompleted(object arg) {
            if ((this.GetResultRawDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultRawDataCompleted(this, new GetResultRawDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetSingleLayerPaging_DDADB", RequestElementName="GetSingleLayerPaging_DDADB", RequestNamespace="http://siglaz.com", ResponseElementName="GetSingleLayerPaging_DDADBResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetSingleLayerPaging_DDADBResult")]
        public DataSetResult GetSingleLayerPaging(SingleLayerRecipe recipe) {
            object[] results = this.Invoke("GetSingleLayerPaging", new object[] {
                        recipe});
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSingleLayerPaging(SingleLayerRecipe recipe, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSingleLayerPaging", new object[] {
                        recipe}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetSingleLayerPaging(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSingleLayerPagingAsync(SingleLayerRecipe recipe) {
            this.GetSingleLayerPagingAsync(recipe, null);
        }
        
        /// <remarks/>
        public void GetSingleLayerPagingAsync(SingleLayerRecipe recipe, object userState) {
            if ((this.GetSingleLayerPagingOperationCompleted == null)) {
                this.GetSingleLayerPagingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSingleLayerPagingOperationCompleted);
            }
            this.InvokeAsync("GetSingleLayerPaging", new object[] {
                        recipe}, this.GetSingleLayerPagingOperationCompleted, userState);
        }
        
        private void OnGetSingleLayerPagingOperationCompleted(object arg) {
            if ((this.GetSingleLayerPagingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSingleLayerPagingCompleted(this, new GetSingleLayerPagingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetHintData_DDADB", RequestElementName="GetHintData_DDADB", RequestNamespace="http://siglaz.com", ResponseElementName="GetHintData_DDADBResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetHintData_DDADBResult")]
        public DataSetResult GetHintData(string fabID, string fieldName, System.DateTime from, System.DateTime to, string filter) {
            object[] results = this.Invoke("GetHintData", new object[] {
                        fabID,
                        fieldName,
                        from,
                        to,
                        filter});
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHintData(string fabID, string fieldName, System.DateTime from, System.DateTime to, string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHintData", new object[] {
                        fabID,
                        fieldName,
                        from,
                        to,
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetHintData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetHintDataAsync(string fabID, string fieldName, System.DateTime from, System.DateTime to, string filter) {
            this.GetHintDataAsync(fabID, fieldName, from, to, filter, null);
        }
        
        /// <remarks/>
        public void GetHintDataAsync(string fabID, string fieldName, System.DateTime from, System.DateTime to, string filter, object userState) {
            if ((this.GetHintDataOperationCompleted == null)) {
                this.GetHintDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHintDataOperationCompleted);
            }
            this.InvokeAsync("GetHintData", new object[] {
                        fabID,
                        fieldName,
                        from,
                        to,
                        filter}, this.GetHintDataOperationCompleted, userState);
        }
        
        private void OnGetHintDataOperationCompleted(object arg) {
            if ((this.GetHintDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHintDataCompleted(this, new GetHintDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetSurfaceHasSignature_DDADB", RequestElementName="GetSurfaceHasSignature_DDADB", RequestNamespace="http://siglaz.com", ResponseElementName="GetSurfaceHasSignature_DDADBResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetSurfaceHasSignature_DDADBResult")]
        public DataSetResult GetSurfaceHasSignature(SingleLayerRecipe recipe) {
            object[] results = this.Invoke("GetSurfaceHasSignature", new object[] {
                        recipe});
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSurfaceHasSignature(SingleLayerRecipe recipe, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSurfaceHasSignature", new object[] {
                        recipe}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetSurfaceHasSignature(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSurfaceHasSignatureAsync(SingleLayerRecipe recipe) {
            this.GetSurfaceHasSignatureAsync(recipe, null);
        }
        
        /// <remarks/>
        public void GetSurfaceHasSignatureAsync(SingleLayerRecipe recipe, object userState) {
            if ((this.GetSurfaceHasSignatureOperationCompleted == null)) {
                this.GetSurfaceHasSignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSurfaceHasSignatureOperationCompleted);
            }
            this.InvokeAsync("GetSurfaceHasSignature", new object[] {
                        recipe}, this.GetSurfaceHasSignatureOperationCompleted, userState);
        }
        
        private void OnGetSurfaceHasSignatureOperationCompleted(object arg) {
            if ((this.GetSurfaceHasSignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSurfaceHasSignatureCompleted(this, new GetSurfaceHasSignatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetResultBySurfaceKey_DDADB", RequestElementName="GetResultBySurfaceKey_DDADB", RequestNamespace="http://siglaz.com", ResponseElementName="GetResultBySurfaceKey_DDADBResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetResultBySurfaceKey_DDADBResult")]
        public DataSetResult GetResultBySurfaceKey(long surfaceKey, SingleLayerRecipe recipe) {
            object[] results = this.Invoke("GetResultBySurfaceKey", new object[] {
                        surfaceKey,
                        recipe});
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetResultBySurfaceKey(long surfaceKey, SingleLayerRecipe recipe, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetResultBySurfaceKey", new object[] {
                        surfaceKey,
                        recipe}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetResultBySurfaceKey(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultBySurfaceKeyAsync(long surfaceKey, SingleLayerRecipe recipe) {
            this.GetResultBySurfaceKeyAsync(surfaceKey, recipe, null);
        }
        
        /// <remarks/>
        public void GetResultBySurfaceKeyAsync(long surfaceKey, SingleLayerRecipe recipe, object userState) {
            if ((this.GetResultBySurfaceKeyOperationCompleted == null)) {
                this.GetResultBySurfaceKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultBySurfaceKeyOperationCompleted);
            }
            this.InvokeAsync("GetResultBySurfaceKey", new object[] {
                        surfaceKey,
                        recipe}, this.GetResultBySurfaceKeyOperationCompleted, userState);
        }
        
        private void OnGetResultBySurfaceKeyOperationCompleted(object arg) {
            if ((this.GetResultBySurfaceKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultBySurfaceKeyCompleted(this, new GetResultBySurfaceKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetResultBySurfaceKey1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetResultBySurfaceKey2_DDADB", RequestElementName="GetResultBySurfaceKey2_DDADB", RequestNamespace="http://siglaz.com", ResponseElementName="GetResultBySurfaceKey2_DDADBResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetResultBySurfaceKey2_DDADBResult")]
        public DataSetResult GetResultBySurfaceKey(long surfaceKey, string sqlWhere) {
            object[] results = this.Invoke("GetResultBySurfaceKey1", new object[] {
                        surfaceKey,
                        sqlWhere});
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetResultBySurfaceKey1(long surfaceKey, string sqlWhere, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetResultBySurfaceKey1", new object[] {
                        surfaceKey,
                        sqlWhere}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetResultBySurfaceKey1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultBySurfaceKey1Async(long surfaceKey, string sqlWhere) {
            this.GetResultBySurfaceKey1Async(surfaceKey, sqlWhere, null);
        }
        
        /// <remarks/>
        public void GetResultBySurfaceKey1Async(long surfaceKey, string sqlWhere, object userState) {
            if ((this.GetResultBySurfaceKey1OperationCompleted == null)) {
                this.GetResultBySurfaceKey1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultBySurfaceKey1OperationCompleted);
            }
            this.InvokeAsync("GetResultBySurfaceKey1", new object[] {
                        surfaceKey,
                        sqlWhere}, this.GetResultBySurfaceKey1OperationCompleted, userState);
        }
        
        private void OnGetResultBySurfaceKey1OperationCompleted(object arg) {
            if ((this.GetResultBySurfaceKey1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultBySurfaceKey1Completed(this, new GetResultBySurfaceKey1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetResultByResultDetailKey_DDADB", RequestElementName="GetResultByResultDetailKey_DDADB", RequestNamespace="http://siglaz.com", ResponseElementName="GetResultByResultDetailKey_DDADBResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetResultByResultDetailKey_DDADBResult")]
        public DataSetResult GetResultByResultDetailKey(long resultDetailKey) {
            object[] results = this.Invoke("GetResultByResultDetailKey", new object[] {
                        resultDetailKey});
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetResultByResultDetailKey(long resultDetailKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetResultByResultDetailKey", new object[] {
                        resultDetailKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetResultByResultDetailKey(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultByResultDetailKeyAsync(long resultDetailKey) {
            this.GetResultByResultDetailKeyAsync(resultDetailKey, null);
        }
        
        /// <remarks/>
        public void GetResultByResultDetailKeyAsync(long resultDetailKey, object userState) {
            if ((this.GetResultByResultDetailKeyOperationCompleted == null)) {
                this.GetResultByResultDetailKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultByResultDetailKeyOperationCompleted);
            }
            this.InvokeAsync("GetResultByResultDetailKey", new object[] {
                        resultDetailKey}, this.GetResultByResultDetailKeyOperationCompleted, userState);
        }
        
        private void OnGetResultByResultDetailKeyOperationCompleted(object arg) {
            if ((this.GetResultByResultDetailKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultByResultDetailKeyCompleted(this, new GetResultByResultDetailKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetTotalRow_SingleLayer_DDADB", RequestElementName="GetTotalRow_SingleLayer_DDADB", RequestNamespace="http://siglaz.com", ResponseElementName="GetTotalRow_SingleLayer_DDADBResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetTotalRow_SingleLayer_DDADBResult")]
        public ResultBase GetTotalRow_SingleLayer(string sqlWhere) {
            object[] results = this.Invoke("GetTotalRow_SingleLayer", new object[] {
                        sqlWhere});
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTotalRow_SingleLayer(string sqlWhere, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTotalRow_SingleLayer", new object[] {
                        sqlWhere}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultBase EndGetTotalRow_SingleLayer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalRow_SingleLayerAsync(string sqlWhere) {
            this.GetTotalRow_SingleLayerAsync(sqlWhere, null);
        }
        
        /// <remarks/>
        public void GetTotalRow_SingleLayerAsync(string sqlWhere, object userState) {
            if ((this.GetTotalRow_SingleLayerOperationCompleted == null)) {
                this.GetTotalRow_SingleLayerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalRow_SingleLayerOperationCompleted);
            }
            this.InvokeAsync("GetTotalRow_SingleLayer", new object[] {
                        sqlWhere}, this.GetTotalRow_SingleLayerOperationCompleted, userState);
        }
        
        private void OnGetTotalRow_SingleLayerOperationCompleted(object arg) {
            if ((this.GetTotalRow_SingleLayerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalRow_SingleLayerCompleted(this, new GetTotalRow_SingleLayerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetTotalRow_SurfaceHasSignature_DDADB", RequestElementName="GetTotalRow_SurfaceHasSignature_DDADB", RequestNamespace="http://siglaz.com", ResponseElementName="GetTotalRow_SurfaceHasSignature_DDADBResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetTotalRow_SurfaceHasSignature_DDADBResult")]
        public ResultBase GetTotalRow_SurfaceHasSignature(string sqlWhere) {
            object[] results = this.Invoke("GetTotalRow_SurfaceHasSignature", new object[] {
                        sqlWhere});
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTotalRow_SurfaceHasSignature(string sqlWhere, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTotalRow_SurfaceHasSignature", new object[] {
                        sqlWhere}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultBase EndGetTotalRow_SurfaceHasSignature(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalRow_SurfaceHasSignatureAsync(string sqlWhere) {
            this.GetTotalRow_SurfaceHasSignatureAsync(sqlWhere, null);
        }
        
        /// <remarks/>
        public void GetTotalRow_SurfaceHasSignatureAsync(string sqlWhere, object userState) {
            if ((this.GetTotalRow_SurfaceHasSignatureOperationCompleted == null)) {
                this.GetTotalRow_SurfaceHasSignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalRow_SurfaceHasSignatureOperationCompleted);
            }
            this.InvokeAsync("GetTotalRow_SurfaceHasSignature", new object[] {
                        sqlWhere}, this.GetTotalRow_SurfaceHasSignatureOperationCompleted, userState);
        }
        
        private void OnGetTotalRow_SurfaceHasSignatureOperationCompleted(object arg) {
            if ((this.GetTotalRow_SurfaceHasSignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalRow_SurfaceHasSignatureCompleted(this, new GetTotalRow_SurfaceHasSignatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetSignatureParetoChart_DDADB", RequestElementName="GetSignatureParetoChart_DDADB", RequestNamespace="http://siglaz.com", ResponseElementName="GetSignatureParetoChart_DDADBResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetSignatureParetoChart_DDADBResult")]
        public ChartResult GetSignatureParetoChart(SingleLayerRecipe recipe) {
            object[] results = this.Invoke("GetSignatureParetoChart", new object[] {
                        recipe});
            return ((ChartResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSignatureParetoChart(SingleLayerRecipe recipe, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSignatureParetoChart", new object[] {
                        recipe}, callback, asyncState);
        }
        
        /// <remarks/>
        public ChartResult EndGetSignatureParetoChart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ChartResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSignatureParetoChartAsync(SingleLayerRecipe recipe) {
            this.GetSignatureParetoChartAsync(recipe, null);
        }
        
        /// <remarks/>
        public void GetSignatureParetoChartAsync(SingleLayerRecipe recipe, object userState) {
            if ((this.GetSignatureParetoChartOperationCompleted == null)) {
                this.GetSignatureParetoChartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSignatureParetoChartOperationCompleted);
            }
            this.InvokeAsync("GetSignatureParetoChart", new object[] {
                        recipe}, this.GetSignatureParetoChartOperationCompleted, userState);
        }
        
        private void OnGetSignatureParetoChartOperationCompleted(object arg) {
            if ((this.GetSignatureParetoChartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSignatureParetoChartCompleted(this, new GetSignatureParetoChartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetSignatureParetoChartIndividualResource_TestCell_DDADB", RequestElementName="GetSignatureParetoChartIndividualResource_TestCell_DDADB", RequestNamespace="http://siglaz.com", ResponseElementName="GetSignatureParetoChartIndividualResource_TestCell_DDADBResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetSignatureParetoChartIndividualResource_TestCell_DDADBResult")]
        public ChartResult GetSignatureParetoChartIndividualResource_TestCell(SingleLayerRecipe recipe) {
            object[] results = this.Invoke("GetSignatureParetoChartIndividualResource_TestCell", new object[] {
                        recipe});
            return ((ChartResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSignatureParetoChartIndividualResource_TestCell(SingleLayerRecipe recipe, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSignatureParetoChartIndividualResource_TestCell", new object[] {
                        recipe}, callback, asyncState);
        }
        
        /// <remarks/>
        public ChartResult EndGetSignatureParetoChartIndividualResource_TestCell(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ChartResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSignatureParetoChartIndividualResource_TestCellAsync(SingleLayerRecipe recipe) {
            this.GetSignatureParetoChartIndividualResource_TestCellAsync(recipe, null);
        }
        
        /// <remarks/>
        public void GetSignatureParetoChartIndividualResource_TestCellAsync(SingleLayerRecipe recipe, object userState) {
            if ((this.GetSignatureParetoChartIndividualResource_TestCellOperationCompleted == null)) {
                this.GetSignatureParetoChartIndividualResource_TestCellOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSignatureParetoChartIndividualResource_TestCellOperationCompleted);
            }
            this.InvokeAsync("GetSignatureParetoChartIndividualResource_TestCell", new object[] {
                        recipe}, this.GetSignatureParetoChartIndividualResource_TestCellOperationCompleted, userState);
        }
        
        private void OnGetSignatureParetoChartIndividualResource_TestCellOperationCompleted(object arg) {
            if ((this.GetSignatureParetoChartIndividualResource_TestCellCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSignatureParetoChartIndividualResource_TestCellCompleted(this, new GetSignatureParetoChartIndividualResource_TestCellCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetResultThumbnail1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetResultThumbnail_DDAStagingArea", RequestElementName="GetResultThumbnail_DDAStagingArea", RequestNamespace="http://siglaz.com", ResponseElementName="GetResultThumbnail_DDAStagingAreaResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetResultThumbnail_DDAStagingAreaResult", DataType="base64Binary")]
        public byte[] GetResultThumbnail(long resultDetailKey, DDADBType type) {
            object[] results = this.Invoke("GetResultThumbnail1", new object[] {
                        resultDetailKey,
                        type});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetResultThumbnail1(long resultDetailKey, DDADBType type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetResultThumbnail1", new object[] {
                        resultDetailKey,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetResultThumbnail1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResultThumbnail1Async(long resultDetailKey, DDADBType type) {
            this.GetResultThumbnail1Async(resultDetailKey, type, null);
        }
        
        /// <remarks/>
        public void GetResultThumbnail1Async(long resultDetailKey, DDADBType type, object userState) {
            if ((this.GetResultThumbnail1OperationCompleted == null)) {
                this.GetResultThumbnail1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultThumbnail1OperationCompleted);
            }
            this.InvokeAsync("GetResultThumbnail1", new object[] {
                        resultDetailKey,
                        type}, this.GetResultThumbnail1OperationCompleted, userState);
        }
        
        private void OnGetResultThumbnail1OperationCompleted(object arg) {
            if ((this.GetResultThumbnail1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultThumbnail1Completed(this, new GetResultThumbnail1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetResultThumbnailFlat1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetResultThumbnailFlat_DDAStagingArea", RequestElementName="GetResultThumbnailFlat_DDAStagingArea", RequestNamespace="http://siglaz.com", ResponseElementName="GetResultThumbnailFlat_DDAStagingAreaResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetResultThumbnailFlat_DDAStagingAreaResult", DataType="base64Binary")]
        public byte[] GetResultThumbnailFlat(long resultDetailKey, DDADBType type) {
            object[] results = this.Invoke("GetResultThumbnailFlat1", new object[] {
                        resultDetailKey,
                        type});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetResultThumbnailFlat1(long resultDetailKey, DDADBType type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetResultThumbnailFlat1", new object[] {
                        resultDetailKey,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetResultThumbnailFlat1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResultThumbnailFlat1Async(long resultDetailKey, DDADBType type) {
            this.GetResultThumbnailFlat1Async(resultDetailKey, type, null);
        }
        
        /// <remarks/>
        public void GetResultThumbnailFlat1Async(long resultDetailKey, DDADBType type, object userState) {
            if ((this.GetResultThumbnailFlat1OperationCompleted == null)) {
                this.GetResultThumbnailFlat1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultThumbnailFlat1OperationCompleted);
            }
            this.InvokeAsync("GetResultThumbnailFlat1", new object[] {
                        resultDetailKey,
                        type}, this.GetResultThumbnailFlat1OperationCompleted, userState);
        }
        
        private void OnGetResultThumbnailFlat1OperationCompleted(object arg) {
            if ((this.GetResultThumbnailFlat1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultThumbnailFlat1Completed(this, new GetResultThumbnailFlat1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetResultRawData1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetResultRawData_DDAStagingArea", RequestElementName="GetResultRawData_DDAStagingArea", RequestNamespace="http://siglaz.com", ResponseElementName="GetResultRawData_DDAStagingAreaResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetResultRawData_DDAStagingAreaResult", DataType="base64Binary")]
        public byte[] GetResultRawData(long resultDetailKey, DDADBType type) {
            object[] results = this.Invoke("GetResultRawData1", new object[] {
                        resultDetailKey,
                        type});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetResultRawData1(long resultDetailKey, DDADBType type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetResultRawData1", new object[] {
                        resultDetailKey,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetResultRawData1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetResultRawData1Async(long resultDetailKey, DDADBType type) {
            this.GetResultRawData1Async(resultDetailKey, type, null);
        }
        
        /// <remarks/>
        public void GetResultRawData1Async(long resultDetailKey, DDADBType type, object userState) {
            if ((this.GetResultRawData1OperationCompleted == null)) {
                this.GetResultRawData1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultRawData1OperationCompleted);
            }
            this.InvokeAsync("GetResultRawData1", new object[] {
                        resultDetailKey,
                        type}, this.GetResultRawData1OperationCompleted, userState);
        }
        
        private void OnGetResultRawData1OperationCompleted(object arg) {
            if ((this.GetResultRawData1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultRawData1Completed(this, new GetResultRawData1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetSingleLayerPaging1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetSingleLayerPaging_DDAStagingArea", RequestElementName="GetSingleLayerPaging_DDAStagingArea", RequestNamespace="http://siglaz.com", ResponseElementName="GetSingleLayerPaging_DDAStagingAreaResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetSingleLayerPaging_DDAStagingAreaResult")]
        public DataSetResult GetSingleLayerPaging(SingleLayerRecipe recipe, DDADBType type) {
            object[] results = this.Invoke("GetSingleLayerPaging1", new object[] {
                        recipe,
                        type});
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSingleLayerPaging1(SingleLayerRecipe recipe, DDADBType type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSingleLayerPaging1", new object[] {
                        recipe,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetSingleLayerPaging1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSingleLayerPaging1Async(SingleLayerRecipe recipe, DDADBType type) {
            this.GetSingleLayerPaging1Async(recipe, type, null);
        }
        
        /// <remarks/>
        public void GetSingleLayerPaging1Async(SingleLayerRecipe recipe, DDADBType type, object userState) {
            if ((this.GetSingleLayerPaging1OperationCompleted == null)) {
                this.GetSingleLayerPaging1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSingleLayerPaging1OperationCompleted);
            }
            this.InvokeAsync("GetSingleLayerPaging1", new object[] {
                        recipe,
                        type}, this.GetSingleLayerPaging1OperationCompleted, userState);
        }
        
        private void OnGetSingleLayerPaging1OperationCompleted(object arg) {
            if ((this.GetSingleLayerPaging1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSingleLayerPaging1Completed(this, new GetSingleLayerPaging1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetHintData1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetHintData_DDAStagingArea", RequestElementName="GetHintData_DDAStagingArea", RequestNamespace="http://siglaz.com", ResponseElementName="GetHintData_DDAStagingAreaResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetHintData_DDAStagingAreaResult")]
        public DataSetResult GetHintData(string fabID, string fieldName, System.DateTime from, System.DateTime to, string filter, DDADBType type) {
            object[] results = this.Invoke("GetHintData1", new object[] {
                        fabID,
                        fieldName,
                        from,
                        to,
                        filter,
                        type});
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHintData1(string fabID, string fieldName, System.DateTime from, System.DateTime to, string filter, DDADBType type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHintData1", new object[] {
                        fabID,
                        fieldName,
                        from,
                        to,
                        filter,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetHintData1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetHintData1Async(string fabID, string fieldName, System.DateTime from, System.DateTime to, string filter, DDADBType type) {
            this.GetHintData1Async(fabID, fieldName, from, to, filter, type, null);
        }
        
        /// <remarks/>
        public void GetHintData1Async(string fabID, string fieldName, System.DateTime from, System.DateTime to, string filter, DDADBType type, object userState) {
            if ((this.GetHintData1OperationCompleted == null)) {
                this.GetHintData1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHintData1OperationCompleted);
            }
            this.InvokeAsync("GetHintData1", new object[] {
                        fabID,
                        fieldName,
                        from,
                        to,
                        filter,
                        type}, this.GetHintData1OperationCompleted, userState);
        }
        
        private void OnGetHintData1OperationCompleted(object arg) {
            if ((this.GetHintData1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHintData1Completed(this, new GetHintData1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetSurfaceHasSignature1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetSurfaceHasSignature_DDAStagingArea", RequestElementName="GetSurfaceHasSignature_DDAStagingArea", RequestNamespace="http://siglaz.com", ResponseElementName="GetSurfaceHasSignature_DDAStagingAreaResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetSurfaceHasSignature_DDAStagingAreaResult")]
        public DataSetResult GetSurfaceHasSignature(SingleLayerRecipe recipe, DDADBType type) {
            object[] results = this.Invoke("GetSurfaceHasSignature1", new object[] {
                        recipe,
                        type});
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSurfaceHasSignature1(SingleLayerRecipe recipe, DDADBType type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSurfaceHasSignature1", new object[] {
                        recipe,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetSurfaceHasSignature1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSurfaceHasSignature1Async(SingleLayerRecipe recipe, DDADBType type) {
            this.GetSurfaceHasSignature1Async(recipe, type, null);
        }
        
        /// <remarks/>
        public void GetSurfaceHasSignature1Async(SingleLayerRecipe recipe, DDADBType type, object userState) {
            if ((this.GetSurfaceHasSignature1OperationCompleted == null)) {
                this.GetSurfaceHasSignature1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSurfaceHasSignature1OperationCompleted);
            }
            this.InvokeAsync("GetSurfaceHasSignature1", new object[] {
                        recipe,
                        type}, this.GetSurfaceHasSignature1OperationCompleted, userState);
        }
        
        private void OnGetSurfaceHasSignature1OperationCompleted(object arg) {
            if ((this.GetSurfaceHasSignature1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSurfaceHasSignature1Completed(this, new GetSurfaceHasSignature1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetResultBySurfaceKey2")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetResultBySurfaceKey_DDAStagingArea", RequestElementName="GetResultBySurfaceKey_DDAStagingArea", RequestNamespace="http://siglaz.com", ResponseElementName="GetResultBySurfaceKey_DDAStagingAreaResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetResultBySurfaceKey_DDAStagingAreaResult")]
        public DataSetResult GetResultBySurfaceKey(long surfaceKey, SingleLayerRecipe recipe, DDADBType type) {
            object[] results = this.Invoke("GetResultBySurfaceKey2", new object[] {
                        surfaceKey,
                        recipe,
                        type});
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetResultBySurfaceKey2(long surfaceKey, SingleLayerRecipe recipe, DDADBType type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetResultBySurfaceKey2", new object[] {
                        surfaceKey,
                        recipe,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetResultBySurfaceKey2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultBySurfaceKey2Async(long surfaceKey, SingleLayerRecipe recipe, DDADBType type) {
            this.GetResultBySurfaceKey2Async(surfaceKey, recipe, type, null);
        }
        
        /// <remarks/>
        public void GetResultBySurfaceKey2Async(long surfaceKey, SingleLayerRecipe recipe, DDADBType type, object userState) {
            if ((this.GetResultBySurfaceKey2OperationCompleted == null)) {
                this.GetResultBySurfaceKey2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultBySurfaceKey2OperationCompleted);
            }
            this.InvokeAsync("GetResultBySurfaceKey2", new object[] {
                        surfaceKey,
                        recipe,
                        type}, this.GetResultBySurfaceKey2OperationCompleted, userState);
        }
        
        private void OnGetResultBySurfaceKey2OperationCompleted(object arg) {
            if ((this.GetResultBySurfaceKey2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultBySurfaceKey2Completed(this, new GetResultBySurfaceKey2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetResultBySurfaceKey3")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetResultBySurfaceKey2_DDAStagingArea", RequestElementName="GetResultBySurfaceKey2_DDAStagingArea", RequestNamespace="http://siglaz.com", ResponseElementName="GetResultBySurfaceKey2_DDAStagingAreaResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetResultBySurfaceKey2_DDAStagingAreaResult")]
        public DataSetResult GetResultBySurfaceKey(long surfaceKey, string sqlWhere, DDADBType type) {
            object[] results = this.Invoke("GetResultBySurfaceKey3", new object[] {
                        surfaceKey,
                        sqlWhere,
                        type});
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetResultBySurfaceKey3(long surfaceKey, string sqlWhere, DDADBType type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetResultBySurfaceKey3", new object[] {
                        surfaceKey,
                        sqlWhere,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetResultBySurfaceKey3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultBySurfaceKey3Async(long surfaceKey, string sqlWhere, DDADBType type) {
            this.GetResultBySurfaceKey3Async(surfaceKey, sqlWhere, type, null);
        }
        
        /// <remarks/>
        public void GetResultBySurfaceKey3Async(long surfaceKey, string sqlWhere, DDADBType type, object userState) {
            if ((this.GetResultBySurfaceKey3OperationCompleted == null)) {
                this.GetResultBySurfaceKey3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultBySurfaceKey3OperationCompleted);
            }
            this.InvokeAsync("GetResultBySurfaceKey3", new object[] {
                        surfaceKey,
                        sqlWhere,
                        type}, this.GetResultBySurfaceKey3OperationCompleted, userState);
        }
        
        private void OnGetResultBySurfaceKey3OperationCompleted(object arg) {
            if ((this.GetResultBySurfaceKey3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultBySurfaceKey3Completed(this, new GetResultBySurfaceKey3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetResultByResultDetailKey1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetResultByResultDetailKey_DDAStagingArea", RequestElementName="GetResultByResultDetailKey_DDAStagingArea", RequestNamespace="http://siglaz.com", ResponseElementName="GetResultByResultDetailKey_DDAStagingAreaResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetResultByResultDetailKey_DDAStagingAreaResult")]
        public DataSetResult GetResultByResultDetailKey(long resultDetailKey, DDADBType type) {
            object[] results = this.Invoke("GetResultByResultDetailKey1", new object[] {
                        resultDetailKey,
                        type});
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetResultByResultDetailKey1(long resultDetailKey, DDADBType type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetResultByResultDetailKey1", new object[] {
                        resultDetailKey,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetResultByResultDetailKey1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultByResultDetailKey1Async(long resultDetailKey, DDADBType type) {
            this.GetResultByResultDetailKey1Async(resultDetailKey, type, null);
        }
        
        /// <remarks/>
        public void GetResultByResultDetailKey1Async(long resultDetailKey, DDADBType type, object userState) {
            if ((this.GetResultByResultDetailKey1OperationCompleted == null)) {
                this.GetResultByResultDetailKey1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultByResultDetailKey1OperationCompleted);
            }
            this.InvokeAsync("GetResultByResultDetailKey1", new object[] {
                        resultDetailKey,
                        type}, this.GetResultByResultDetailKey1OperationCompleted, userState);
        }
        
        private void OnGetResultByResultDetailKey1OperationCompleted(object arg) {
            if ((this.GetResultByResultDetailKey1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultByResultDetailKey1Completed(this, new GetResultByResultDetailKey1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetTotalRow_SingleLayer1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetTotalRow_SingleLayer_DDAStagingArea", RequestElementName="GetTotalRow_SingleLayer_DDAStagingArea", RequestNamespace="http://siglaz.com", ResponseElementName="GetTotalRow_SingleLayer_DDAStagingAreaResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetTotalRow_SingleLayer_DDAStagingAreaResult")]
        public ResultBase GetTotalRow_SingleLayer(string sqlWhere, DDADBType type) {
            object[] results = this.Invoke("GetTotalRow_SingleLayer1", new object[] {
                        sqlWhere,
                        type});
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTotalRow_SingleLayer1(string sqlWhere, DDADBType type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTotalRow_SingleLayer1", new object[] {
                        sqlWhere,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultBase EndGetTotalRow_SingleLayer1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalRow_SingleLayer1Async(string sqlWhere, DDADBType type) {
            this.GetTotalRow_SingleLayer1Async(sqlWhere, type, null);
        }
        
        /// <remarks/>
        public void GetTotalRow_SingleLayer1Async(string sqlWhere, DDADBType type, object userState) {
            if ((this.GetTotalRow_SingleLayer1OperationCompleted == null)) {
                this.GetTotalRow_SingleLayer1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalRow_SingleLayer1OperationCompleted);
            }
            this.InvokeAsync("GetTotalRow_SingleLayer1", new object[] {
                        sqlWhere,
                        type}, this.GetTotalRow_SingleLayer1OperationCompleted, userState);
        }
        
        private void OnGetTotalRow_SingleLayer1OperationCompleted(object arg) {
            if ((this.GetTotalRow_SingleLayer1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalRow_SingleLayer1Completed(this, new GetTotalRow_SingleLayer1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetTotalRow_SurfaceHasSignature1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetTotalRow_SurfaceHasSignature_DDAStagingArea", RequestElementName="GetTotalRow_SurfaceHasSignature_DDAStagingArea", RequestNamespace="http://siglaz.com", ResponseElementName="GetTotalRow_SurfaceHasSignature_DDAStagingAreaResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetTotalRow_SurfaceHasSignature_DDAStagingAreaResult")]
        public ResultBase GetTotalRow_SurfaceHasSignature(string sqlWhere, DDADBType type) {
            object[] results = this.Invoke("GetTotalRow_SurfaceHasSignature1", new object[] {
                        sqlWhere,
                        type});
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTotalRow_SurfaceHasSignature1(string sqlWhere, DDADBType type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTotalRow_SurfaceHasSignature1", new object[] {
                        sqlWhere,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultBase EndGetTotalRow_SurfaceHasSignature1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalRow_SurfaceHasSignature1Async(string sqlWhere, DDADBType type) {
            this.GetTotalRow_SurfaceHasSignature1Async(sqlWhere, type, null);
        }
        
        /// <remarks/>
        public void GetTotalRow_SurfaceHasSignature1Async(string sqlWhere, DDADBType type, object userState) {
            if ((this.GetTotalRow_SurfaceHasSignature1OperationCompleted == null)) {
                this.GetTotalRow_SurfaceHasSignature1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalRow_SurfaceHasSignature1OperationCompleted);
            }
            this.InvokeAsync("GetTotalRow_SurfaceHasSignature1", new object[] {
                        sqlWhere,
                        type}, this.GetTotalRow_SurfaceHasSignature1OperationCompleted, userState);
        }
        
        private void OnGetTotalRow_SurfaceHasSignature1OperationCompleted(object arg) {
            if ((this.GetTotalRow_SurfaceHasSignature1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalRow_SurfaceHasSignature1Completed(this, new GetTotalRow_SurfaceHasSignature1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetSignatureParetoChart1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetSignatureParetoChart_DDAStagingArea", RequestElementName="GetSignatureParetoChart_DDAStagingArea", RequestNamespace="http://siglaz.com", ResponseElementName="GetSignatureParetoChart_DDAStagingAreaResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetSignatureParetoChart_DDAStagingAreaResult")]
        public ChartResult GetSignatureParetoChart(SingleLayerRecipe recipe, DDADBType type) {
            object[] results = this.Invoke("GetSignatureParetoChart1", new object[] {
                        recipe,
                        type});
            return ((ChartResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSignatureParetoChart1(SingleLayerRecipe recipe, DDADBType type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSignatureParetoChart1", new object[] {
                        recipe,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public ChartResult EndGetSignatureParetoChart1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ChartResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSignatureParetoChart1Async(SingleLayerRecipe recipe, DDADBType type) {
            this.GetSignatureParetoChart1Async(recipe, type, null);
        }
        
        /// <remarks/>
        public void GetSignatureParetoChart1Async(SingleLayerRecipe recipe, DDADBType type, object userState) {
            if ((this.GetSignatureParetoChart1OperationCompleted == null)) {
                this.GetSignatureParetoChart1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSignatureParetoChart1OperationCompleted);
            }
            this.InvokeAsync("GetSignatureParetoChart1", new object[] {
                        recipe,
                        type}, this.GetSignatureParetoChart1OperationCompleted, userState);
        }
        
        private void OnGetSignatureParetoChart1OperationCompleted(object arg) {
            if ((this.GetSignatureParetoChart1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSignatureParetoChart1Completed(this, new GetSignatureParetoChart1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetSignatureParetoChartIndividualResource_TestCell1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetSignatureParetoChartIndividualResource_TestCell_DDAStagingAr" +
            "ea", RequestElementName="GetSignatureParetoChartIndividualResource_TestCell_DDAStagingArea", RequestNamespace="http://siglaz.com", ResponseElementName="GetSignatureParetoChartIndividualResource_TestCell_DDAStagingAreaResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetSignatureParetoChartIndividualResource_TestCell_DDAStagingAreaResult")]
        public ChartResult GetSignatureParetoChartIndividualResource_TestCell(SingleLayerRecipe recipe, DDADBType type) {
            object[] results = this.Invoke("GetSignatureParetoChartIndividualResource_TestCell1", new object[] {
                        recipe,
                        type});
            return ((ChartResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSignatureParetoChartIndividualResource_TestCell1(SingleLayerRecipe recipe, DDADBType type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSignatureParetoChartIndividualResource_TestCell1", new object[] {
                        recipe,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public ChartResult EndGetSignatureParetoChartIndividualResource_TestCell1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ChartResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSignatureParetoChartIndividualResource_TestCell1Async(SingleLayerRecipe recipe, DDADBType type) {
            this.GetSignatureParetoChartIndividualResource_TestCell1Async(recipe, type, null);
        }
        
        /// <remarks/>
        public void GetSignatureParetoChartIndividualResource_TestCell1Async(SingleLayerRecipe recipe, DDADBType type, object userState) {
            if ((this.GetSignatureParetoChartIndividualResource_TestCell1OperationCompleted == null)) {
                this.GetSignatureParetoChartIndividualResource_TestCell1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSignatureParetoChartIndividualResource_TestCell1OperationCompleted);
            }
            this.InvokeAsync("GetSignatureParetoChartIndividualResource_TestCell1", new object[] {
                        recipe,
                        type}, this.GetSignatureParetoChartIndividualResource_TestCell1OperationCompleted, userState);
        }
        
        private void OnGetSignatureParetoChartIndividualResource_TestCell1OperationCompleted(object arg) {
            if ((this.GetSignatureParetoChartIndividualResource_TestCell1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSignatureParetoChartIndividualResource_TestCell1Completed(this, new GetSignatureParetoChartIndividualResource_TestCell1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class SingleLayerRecipe : DataSourceRecipe {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SingleLayerRecipe))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class DataSourceRecipe {
        
        private TimeFilter timeFilterField;
        
        private QueryCondition queryConditionField;
        
        private TableLayout tableLayoutField;
        
        private ViewSurface viewSurfaceField;
        
        private ViewType viewTypeField;
        
        private bool excludeDuplicateDiskField;
        
        private string groupByField;
        
        /// <remarks/>
        public TimeFilter TimeFilter {
            get {
                return this.timeFilterField;
            }
            set {
                this.timeFilterField = value;
            }
        }
        
        /// <remarks/>
        public QueryCondition QueryCondition {
            get {
                return this.queryConditionField;
            }
            set {
                this.queryConditionField = value;
            }
        }
        
        /// <remarks/>
        public TableLayout TableLayout {
            get {
                return this.tableLayoutField;
            }
            set {
                this.tableLayoutField = value;
            }
        }
        
        /// <remarks/>
        public ViewSurface ViewSurface {
            get {
                return this.viewSurfaceField;
            }
            set {
                this.viewSurfaceField = value;
            }
        }
        
        /// <remarks/>
        public ViewType ViewType {
            get {
                return this.viewTypeField;
            }
            set {
                this.viewTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool ExcludeDuplicateDisk {
            get {
                return this.excludeDuplicateDiskField;
            }
            set {
                this.excludeDuplicateDiskField = value;
            }
        }
        
        /// <remarks/>
        public string GroupBy {
            get {
                return this.groupByField;
            }
            set {
                this.groupByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class TimeFilter {
        
        private TimeRangeType typeField;
        
        private System.DateTime fromField;
        
        private System.DateTime toField;
        
        private int nField;
        
        /// <remarks/>
        public TimeRangeType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        public int N {
            get {
                return this.nField;
            }
            set {
                this.nField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public enum TimeRangeType {
        
        /// <remarks/>
        LastOneHour,
        
        /// <remarks/>
        Last6Hours,
        
        /// <remarks/>
        Last12Hours,
        
        /// <remarks/>
        LastOneDay,
        
        /// <remarks/>
        LastOneWeek,
        
        /// <remarks/>
        Last2Weeks,
        
        /// <remarks/>
        Last3Weeks,
        
        /// <remarks/>
        LastOneMonth,
        
        /// <remarks/>
        FromDateToDate,
        
        /// <remarks/>
        LastNHours,
        
        /// <remarks/>
        LastNDays,
        
        /// <remarks/>
        LastNWeeks,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class IndividualChartResult {
        
        private string groupByNameField;
        
        private ChartResult resultField;
        
        /// <remarks/>
        public string GroupByName {
            get {
                return this.groupByNameField;
            }
            set {
                this.groupByNameField = value;
            }
        }
        
        /// <remarks/>
        public ChartResult Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class ChartResult {
        
        private string chartTitleField;
        
        private string categoryTitleField;
        
        private string dataTitleField;
        
        private string dataTitle2Field;
        
        private string[] categoryValuesField;
        
        private string[] labelValuesField;
        
        private double[] dataValuesField;
        
        private double[] dataValues2Field;
        
        private double[] paretoValuesField;
        
        private int maxDiskField;
        
        private double maxYieldField;
        
        private IndividualChartResult[] individualChartResultsField;
        
        /// <remarks/>
        public string ChartTitle {
            get {
                return this.chartTitleField;
            }
            set {
                this.chartTitleField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryTitle {
            get {
                return this.categoryTitleField;
            }
            set {
                this.categoryTitleField = value;
            }
        }
        
        /// <remarks/>
        public string DataTitle {
            get {
                return this.dataTitleField;
            }
            set {
                this.dataTitleField = value;
            }
        }
        
        /// <remarks/>
        public string DataTitle2 {
            get {
                return this.dataTitle2Field;
            }
            set {
                this.dataTitle2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CategoryValues")]
        public string[] CategoryValues {
            get {
                return this.categoryValuesField;
            }
            set {
                this.categoryValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LabelValues")]
        public string[] LabelValues {
            get {
                return this.labelValuesField;
            }
            set {
                this.labelValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DataValues")]
        public double[] DataValues {
            get {
                return this.dataValuesField;
            }
            set {
                this.dataValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DataValues2")]
        public double[] DataValues2 {
            get {
                return this.dataValues2Field;
            }
            set {
                this.dataValues2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ParetoValues")]
        public double[] ParetoValues {
            get {
                return this.paretoValuesField;
            }
            set {
                this.paretoValuesField = value;
            }
        }
        
        /// <remarks/>
        public int MaxDisk {
            get {
                return this.maxDiskField;
            }
            set {
                this.maxDiskField = value;
            }
        }
        
        /// <remarks/>
        public double MaxYield {
            get {
                return this.maxYieldField;
            }
            set {
                this.maxYieldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IndividualChartResults")]
        public IndividualChartResult[] IndividualChartResults {
            get {
                return this.individualChartResultsField;
            }
            set {
                this.individualChartResultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResultBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSetResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class Error {
        
        private ErrorCode codeField;
        
        private string descriptionField;
        
        /// <remarks/>
        public ErrorCode Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public enum ErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        UNKNOWN_ERROR,
        
        /// <remarks/>
        NO_DATA,
        
        /// <remarks/>
        INVALID_SQL_STATEMENT,
        
        /// <remarks/>
        NO_AUTHORIZED,
        
        /// <remarks/>
        NO_DATA_TO_ANALYZE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class ResultBase : Error {
        
        private long id64Field;
        
        private int id32Field;
        
        private short id16Field;
        
        private string idstringField;
        
        /// <remarks/>
        public long id64 {
            get {
                return this.id64Field;
            }
            set {
                this.id64Field = value;
            }
        }
        
        /// <remarks/>
        public int id32 {
            get {
                return this.id32Field;
            }
            set {
                this.id32Field = value;
            }
        }
        
        /// <remarks/>
        public short id16 {
            get {
                return this.id16Field;
            }
            set {
                this.id16Field = value;
            }
        }
        
        /// <remarks/>
        public string idstring {
            get {
                return this.idstringField;
            }
            set {
                this.idstringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class DataSetResult : Error {
        
        private System.Data.DataSet resultField;
        
        private int totalRowField;
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public int TotalRow {
            get {
                return this.totalRowField;
            }
            set {
                this.totalRowField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class TableLayout {
        
        private int pageIndexField;
        
        private int pageSizeField;
        
        private string[] displayColumnsField;
        
        private string orderByField;
        
        /// <remarks/>
        public int PageIndex {
            get {
                return this.pageIndexField;
            }
            set {
                this.pageIndexField = value;
            }
        }
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public string[] DisplayColumns {
            get {
                return this.displayColumnsField;
            }
            set {
                this.displayColumnsField = value;
            }
        }
        
        /// <remarks/>
        public string OrderBy {
            get {
                return this.orderByField;
            }
            set {
                this.orderByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class QueryCondition {
        
        private string fabIdField;
        
        private ConditionType conditionTypeField;
        
        private string[] conditionListField;
        
        private bool isOrAndField;
        
        private bool isFilterField;
        
        /// <remarks/>
        public string FabId {
            get {
                return this.fabIdField;
            }
            set {
                this.fabIdField = value;
            }
        }
        
        /// <remarks/>
        public ConditionType ConditionType {
            get {
                return this.conditionTypeField;
            }
            set {
                this.conditionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ConditionList")]
        public string[] ConditionList {
            get {
                return this.conditionListField;
            }
            set {
                this.conditionListField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOrAnd {
            get {
                return this.isOrAndField;
            }
            set {
                this.isOrAndField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFilter {
            get {
                return this.isFilterField;
            }
            set {
                this.isFilterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public enum ConditionType {
        
        /// <remarks/>
        Basic,
        
        /// <remarks/>
        Advanced,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public enum ViewSurface {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        Top,
        
        /// <remarks/>
        Bottom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public enum ViewType {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        SourceWithSignature,
        
        /// <remarks/>
        SourceWithoutSignature,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public enum DDADBType {
        
        /// <remarks/>
        DDADB,
        
        /// <remarks/>
        DDAStagingArea,
        
        /// <remarks/>
        DDAArchives,
        
        /// <remarks/>
        DDADataMarts,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetResultThumbnailCompletedEventHandler(object sender, GetResultThumbnailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultThumbnailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultThumbnailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetResultThumbnailFlatCompletedEventHandler(object sender, GetResultThumbnailFlatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultThumbnailFlatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultThumbnailFlatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetResultRawDataCompletedEventHandler(object sender, GetResultRawDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultRawDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultRawDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetSingleLayerPagingCompletedEventHandler(object sender, GetSingleLayerPagingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSingleLayerPagingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSingleLayerPagingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetHintDataCompletedEventHandler(object sender, GetHintDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHintDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHintDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetSurfaceHasSignatureCompletedEventHandler(object sender, GetSurfaceHasSignatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSurfaceHasSignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSurfaceHasSignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetResultBySurfaceKeyCompletedEventHandler(object sender, GetResultBySurfaceKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultBySurfaceKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultBySurfaceKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetResultBySurfaceKey1CompletedEventHandler(object sender, GetResultBySurfaceKey1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultBySurfaceKey1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultBySurfaceKey1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetResultByResultDetailKeyCompletedEventHandler(object sender, GetResultByResultDetailKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultByResultDetailKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultByResultDetailKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetTotalRow_SingleLayerCompletedEventHandler(object sender, GetTotalRow_SingleLayerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalRow_SingleLayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalRow_SingleLayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultBase Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultBase)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetTotalRow_SurfaceHasSignatureCompletedEventHandler(object sender, GetTotalRow_SurfaceHasSignatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalRow_SurfaceHasSignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalRow_SurfaceHasSignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultBase Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultBase)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetSignatureParetoChartCompletedEventHandler(object sender, GetSignatureParetoChartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSignatureParetoChartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSignatureParetoChartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChartResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChartResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetSignatureParetoChartIndividualResource_TestCellCompletedEventHandler(object sender, GetSignatureParetoChartIndividualResource_TestCellCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSignatureParetoChartIndividualResource_TestCellCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSignatureParetoChartIndividualResource_TestCellCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChartResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChartResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetResultThumbnail1CompletedEventHandler(object sender, GetResultThumbnail1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultThumbnail1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultThumbnail1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetResultThumbnailFlat1CompletedEventHandler(object sender, GetResultThumbnailFlat1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultThumbnailFlat1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultThumbnailFlat1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetResultRawData1CompletedEventHandler(object sender, GetResultRawData1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultRawData1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultRawData1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetSingleLayerPaging1CompletedEventHandler(object sender, GetSingleLayerPaging1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSingleLayerPaging1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSingleLayerPaging1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetHintData1CompletedEventHandler(object sender, GetHintData1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHintData1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHintData1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetSurfaceHasSignature1CompletedEventHandler(object sender, GetSurfaceHasSignature1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSurfaceHasSignature1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSurfaceHasSignature1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetResultBySurfaceKey2CompletedEventHandler(object sender, GetResultBySurfaceKey2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultBySurfaceKey2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultBySurfaceKey2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetResultBySurfaceKey3CompletedEventHandler(object sender, GetResultBySurfaceKey3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultBySurfaceKey3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultBySurfaceKey3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetResultByResultDetailKey1CompletedEventHandler(object sender, GetResultByResultDetailKey1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultByResultDetailKey1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultByResultDetailKey1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetTotalRow_SingleLayer1CompletedEventHandler(object sender, GetTotalRow_SingleLayer1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalRow_SingleLayer1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalRow_SingleLayer1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultBase Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultBase)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetTotalRow_SurfaceHasSignature1CompletedEventHandler(object sender, GetTotalRow_SurfaceHasSignature1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalRow_SurfaceHasSignature1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalRow_SurfaceHasSignature1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultBase Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultBase)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetSignatureParetoChart1CompletedEventHandler(object sender, GetSignatureParetoChart1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSignatureParetoChart1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSignatureParetoChart1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChartResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChartResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetSignatureParetoChartIndividualResource_TestCell1CompletedEventHandler(object sender, GetSignatureParetoChartIndividualResource_TestCell1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSignatureParetoChartIndividualResource_TestCell1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSignatureParetoChartIndividualResource_TestCell1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChartResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChartResult)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591