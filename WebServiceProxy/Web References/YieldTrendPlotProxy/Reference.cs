//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4952.
// 
#pragma warning disable 1591

namespace WebServiceProxy.YieldTrendPlotProxy {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="YieldTrendPlotSoap", Namespace="http://siglaz.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Error))]
    public partial class YieldTrendPlot : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetChartDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHintDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCubeNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFabListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckIsActiveOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public YieldTrendPlot() {
            this.Url = "http://localhost/DDAWebService/YieldTrendPlot.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetChartDataCompletedEventHandler GetChartDataCompleted;
        
        /// <remarks/>
        public event GetHintDataCompletedEventHandler GetHintDataCompleted;
        
        /// <remarks/>
        public event GetCubeNamesCompletedEventHandler GetCubeNamesCompleted;
        
        /// <remarks/>
        public event GetFabListCompletedEventHandler GetFabListCompleted;
        
        /// <remarks/>
        public event GetDateListCompletedEventHandler GetDateListCompleted;
        
        /// <remarks/>
        public event GetTemplateListCompletedEventHandler GetTemplateListCompleted;
        
        /// <remarks/>
        public event GetTemplateDetailCompletedEventHandler GetTemplateDetailCompleted;
        
        /// <remarks/>
        public event CheckIsActiveCompletedEventHandler CheckIsActiveCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetChartData", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public YieldTrendPlotResult GetChartData(YieldTrendPlotRecipe recipe) {
            object[] results = this.Invoke("GetChartData", new object[] {
                        recipe});
            return ((YieldTrendPlotResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChartData(YieldTrendPlotRecipe recipe, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChartData", new object[] {
                        recipe}, callback, asyncState);
        }
        
        /// <remarks/>
        public YieldTrendPlotResult EndGetChartData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((YieldTrendPlotResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetChartDataAsync(YieldTrendPlotRecipe recipe) {
            this.GetChartDataAsync(recipe, null);
        }
        
        /// <remarks/>
        public void GetChartDataAsync(YieldTrendPlotRecipe recipe, object userState) {
            if ((this.GetChartDataOperationCompleted == null)) {
                this.GetChartDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChartDataOperationCompleted);
            }
            this.InvokeAsync("GetChartData", new object[] {
                        recipe}, this.GetChartDataOperationCompleted, userState);
        }
        
        private void OnGetChartDataOperationCompleted(object arg) {
            if ((this.GetChartDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChartDataCompleted(this, new GetChartDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetHintData", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult GetHintData(string fabID, string cubeType, string cubeName, string fieldName, System.DateTime from, System.DateTime to, string filter) {
            object[] results = this.Invoke("GetHintData", new object[] {
                        fabID,
                        cubeType,
                        cubeName,
                        fieldName,
                        from,
                        to,
                        filter});
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHintData(string fabID, string cubeType, string cubeName, string fieldName, System.DateTime from, System.DateTime to, string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHintData", new object[] {
                        fabID,
                        cubeType,
                        cubeName,
                        fieldName,
                        from,
                        to,
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetHintData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetHintDataAsync(string fabID, string cubeType, string cubeName, string fieldName, System.DateTime from, System.DateTime to, string filter) {
            this.GetHintDataAsync(fabID, cubeType, cubeName, fieldName, from, to, filter, null);
        }
        
        /// <remarks/>
        public void GetHintDataAsync(string fabID, string cubeType, string cubeName, string fieldName, System.DateTime from, System.DateTime to, string filter, object userState) {
            if ((this.GetHintDataOperationCompleted == null)) {
                this.GetHintDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHintDataOperationCompleted);
            }
            this.InvokeAsync("GetHintData", new object[] {
                        fabID,
                        cubeType,
                        cubeName,
                        fieldName,
                        from,
                        to,
                        filter}, this.GetHintDataOperationCompleted, userState);
        }
        
        private void OnGetHintDataOperationCompleted(object arg) {
            if ((this.GetHintDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHintDataCompleted(this, new GetHintDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetCubeNames", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult GetCubeNames(string cubeType) {
            object[] results = this.Invoke("GetCubeNames", new object[] {
                        cubeType});
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCubeNames(string cubeType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCubeNames", new object[] {
                        cubeType}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetCubeNames(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetCubeNamesAsync(string cubeType) {
            this.GetCubeNamesAsync(cubeType, null);
        }
        
        /// <remarks/>
        public void GetCubeNamesAsync(string cubeType, object userState) {
            if ((this.GetCubeNamesOperationCompleted == null)) {
                this.GetCubeNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCubeNamesOperationCompleted);
            }
            this.InvokeAsync("GetCubeNames", new object[] {
                        cubeType}, this.GetCubeNamesOperationCompleted, userState);
        }
        
        private void OnGetCubeNamesOperationCompleted(object arg) {
            if ((this.GetCubeNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCubeNamesCompleted(this, new GetCubeNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetFabList", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult GetFabList() {
            object[] results = this.Invoke("GetFabList", new object[0]);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFabList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFabList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetFabList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetFabListAsync() {
            this.GetFabListAsync(null);
        }
        
        /// <remarks/>
        public void GetFabListAsync(object userState) {
            if ((this.GetFabListOperationCompleted == null)) {
                this.GetFabListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFabListOperationCompleted);
            }
            this.InvokeAsync("GetFabList", new object[0], this.GetFabListOperationCompleted, userState);
        }
        
        private void OnGetFabListOperationCompleted(object arg) {
            if ((this.GetFabListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFabListCompleted(this, new GetFabListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetDateList", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult GetDateList(string cubeName, string cubeType) {
            object[] results = this.Invoke("GetDateList", new object[] {
                        cubeName,
                        cubeType});
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDateList(string cubeName, string cubeType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDateList", new object[] {
                        cubeName,
                        cubeType}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetDateList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetDateListAsync(string cubeName, string cubeType) {
            this.GetDateListAsync(cubeName, cubeType, null);
        }
        
        /// <remarks/>
        public void GetDateListAsync(string cubeName, string cubeType, object userState) {
            if ((this.GetDateListOperationCompleted == null)) {
                this.GetDateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDateListOperationCompleted);
            }
            this.InvokeAsync("GetDateList", new object[] {
                        cubeName,
                        cubeType}, this.GetDateListOperationCompleted, userState);
        }
        
        private void OnGetDateListOperationCompleted(object arg) {
            if ((this.GetDateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDateListCompleted(this, new GetDateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetTemplateList", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult GetTemplateList() {
            object[] results = this.Invoke("GetTemplateList", new object[0]);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTemplateList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTemplateList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetTemplateList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateListAsync() {
            this.GetTemplateListAsync(null);
        }
        
        /// <remarks/>
        public void GetTemplateListAsync(object userState) {
            if ((this.GetTemplateListOperationCompleted == null)) {
                this.GetTemplateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateListOperationCompleted);
            }
            this.InvokeAsync("GetTemplateList", new object[0], this.GetTemplateListOperationCompleted, userState);
        }
        
        private void OnGetTemplateListOperationCompleted(object arg) {
            if ((this.GetTemplateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateListCompleted(this, new GetTemplateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetTemplateDetail", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult GetTemplateDetail(int templateKey) {
            object[] results = this.Invoke("GetTemplateDetail", new object[] {
                        templateKey});
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTemplateDetail(int templateKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTemplateDetail", new object[] {
                        templateKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGetTemplateDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateDetailAsync(int templateKey) {
            this.GetTemplateDetailAsync(templateKey, null);
        }
        
        /// <remarks/>
        public void GetTemplateDetailAsync(int templateKey, object userState) {
            if ((this.GetTemplateDetailOperationCompleted == null)) {
                this.GetTemplateDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateDetailOperationCompleted);
            }
            this.InvokeAsync("GetTemplateDetail", new object[] {
                        templateKey}, this.GetTemplateDetailOperationCompleted, userState);
        }
        
        private void OnGetTemplateDetailOperationCompleted(object arg) {
            if ((this.GetTemplateDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateDetailCompleted(this, new GetTemplateDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/CheckIsActive", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckIsActive(int cubeKey) {
            object[] results = this.Invoke("CheckIsActive", new object[] {
                        cubeKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckIsActive(int cubeKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckIsActive", new object[] {
                        cubeKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckIsActive(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckIsActiveAsync(int cubeKey) {
            this.CheckIsActiveAsync(cubeKey, null);
        }
        
        /// <remarks/>
        public void CheckIsActiveAsync(int cubeKey, object userState) {
            if ((this.CheckIsActiveOperationCompleted == null)) {
                this.CheckIsActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckIsActiveOperationCompleted);
            }
            this.InvokeAsync("CheckIsActive", new object[] {
                        cubeKey}, this.CheckIsActiveOperationCompleted, userState);
        }
        
        private void OnCheckIsActiveOperationCompleted(object arg) {
            if ((this.CheckIsActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckIsActiveCompleted(this, new CheckIsActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class YieldTrendPlotRecipe {
        
        private TimeFilter timeFilterField;
        
        private QueryCondition queryConditionField;
        
        private int gradeField;
        
        private double controlLimitField;
        
        private CategoryAxis categoryAxisField;
        
        private ValueAxis valueAxisField;
        
        private CubeInfo cubeInfoField;
        
        private bool isShowNullDataPointField;
        
        /// <remarks/>
        public TimeFilter TimeFilter {
            get {
                return this.timeFilterField;
            }
            set {
                this.timeFilterField = value;
            }
        }
        
        /// <remarks/>
        public QueryCondition QueryCondition {
            get {
                return this.queryConditionField;
            }
            set {
                this.queryConditionField = value;
            }
        }
        
        /// <remarks/>
        public int Grade {
            get {
                return this.gradeField;
            }
            set {
                this.gradeField = value;
            }
        }
        
        /// <remarks/>
        public double ControlLimit {
            get {
                return this.controlLimitField;
            }
            set {
                this.controlLimitField = value;
            }
        }
        
        /// <remarks/>
        public CategoryAxis CategoryAxis {
            get {
                return this.categoryAxisField;
            }
            set {
                this.categoryAxisField = value;
            }
        }
        
        /// <remarks/>
        public ValueAxis ValueAxis {
            get {
                return this.valueAxisField;
            }
            set {
                this.valueAxisField = value;
            }
        }
        
        /// <remarks/>
        public CubeInfo CubeInfo {
            get {
                return this.cubeInfoField;
            }
            set {
                this.cubeInfoField = value;
            }
        }
        
        /// <remarks/>
        public bool IsShowNullDataPoint {
            get {
                return this.isShowNullDataPointField;
            }
            set {
                this.isShowNullDataPointField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class TimeFilter {
        
        private TimeRangeType typeField;
        
        private System.DateTime fromField;
        
        private System.DateTime toField;
        
        private int nField;
        
        /// <remarks/>
        public TimeRangeType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        public int N {
            get {
                return this.nField;
            }
            set {
                this.nField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public enum TimeRangeType {
        
        /// <remarks/>
        LastOneHour,
        
        /// <remarks/>
        Last6Hours,
        
        /// <remarks/>
        Last12Hours,
        
        /// <remarks/>
        LastOneDay,
        
        /// <remarks/>
        LastOneWeek,
        
        /// <remarks/>
        Last2Weeks,
        
        /// <remarks/>
        Last3Weeks,
        
        /// <remarks/>
        LastOneMonth,
        
        /// <remarks/>
        FromDateToDate,
        
        /// <remarks/>
        LastNHours,
        
        /// <remarks/>
        LastNDays,
        
        /// <remarks/>
        LastNWeeks,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSetResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(YieldTrendPlotResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class Error {
        
        private ErrorCode codeField;
        
        private string descriptionField;
        
        /// <remarks/>
        public ErrorCode Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public enum ErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        UNKNOWN_ERROR,
        
        /// <remarks/>
        NO_DATA,
        
        /// <remarks/>
        INVALID_SQL_STATEMENT,
        
        /// <remarks/>
        NO_AUTHORIZED,
        
        /// <remarks/>
        NO_DATA_TO_ANALYZE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class DataSetResult : Error {
        
        private System.Data.DataSet resultField;
        
        private int totalRowField;
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public int TotalRow {
            get {
                return this.totalRowField;
            }
            set {
                this.totalRowField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class YieldTrendPlotResult : Error {
        
        private string chartTitleField;
        
        private string categoryLabelField;
        
        private string dataLabelField;
        
        private string[] categoryValuesField;
        
        private double[] dataValuesField;
        
        private double controlLimitField;
        
        private System.DateTime[] dateTimesField;
        
        /// <remarks/>
        public string ChartTitle {
            get {
                return this.chartTitleField;
            }
            set {
                this.chartTitleField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryLabel {
            get {
                return this.categoryLabelField;
            }
            set {
                this.categoryLabelField = value;
            }
        }
        
        /// <remarks/>
        public string DataLabel {
            get {
                return this.dataLabelField;
            }
            set {
                this.dataLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CategoryValues")]
        public string[] CategoryValues {
            get {
                return this.categoryValuesField;
            }
            set {
                this.categoryValuesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DataValues")]
        public double[] DataValues {
            get {
                return this.dataValuesField;
            }
            set {
                this.dataValuesField = value;
            }
        }
        
        /// <remarks/>
        public double ControlLimit {
            get {
                return this.controlLimitField;
            }
            set {
                this.controlLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DateTimes")]
        public System.DateTime[] DateTimes {
            get {
                return this.dateTimesField;
            }
            set {
                this.dateTimesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class CubeInfo {
        
        private CubeType typeField;
        
        private string nameField;
        
        private bool isActiveField;
        
        /// <remarks/>
        public CubeType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public enum CubeType {
        
        /// <remarks/>
        Yield2H,
        
        /// <remarks/>
        Yield4H,
        
        /// <remarks/>
        Performance,
        
        /// <remarks/>
        Yield2H_V2,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class ValueAxis {
        
        private ValueAxisUnit unitField;
        
        /// <remarks/>
        public ValueAxisUnit Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public enum ValueAxisUnit {
        
        /// <remarks/>
        WaferChipCount,
        
        /// <remarks/>
        SignatureChipCount,
        
        /// <remarks/>
        Yield,
        
        /// <remarks/>
        AverageProcessingTime,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class CategoryAxis {
        
        private CategoryAxisUnit unitField;
        
        private int groupUnitField;
        
        /// <remarks/>
        public CategoryAxisUnit Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public int GroupUnit {
            get {
                return this.groupUnitField;
            }
            set {
                this.groupUnitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public enum CategoryAxisUnit {
        
        /// <remarks/>
        Wafer,
        
        /// <remarks/>
        Lot,
        
        /// <remarks/>
        Hour,
        
        /// <remarks/>
        Day,
        
        /// <remarks/>
        Week,
        
        /// <remarks/>
        Month,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public partial class QueryCondition {
        
        private string fabIdField;
        
        private ConditionType conditionTypeField;
        
        private string[] conditionListField;
        
        private bool isOrAndField;
        
        private bool isFilterField;
        
        /// <remarks/>
        public string FabId {
            get {
                return this.fabIdField;
            }
            set {
                this.fabIdField = value;
            }
        }
        
        /// <remarks/>
        public ConditionType ConditionType {
            get {
                return this.conditionTypeField;
            }
            set {
                this.conditionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ConditionList")]
        public string[] ConditionList {
            get {
                return this.conditionListField;
            }
            set {
                this.conditionListField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOrAnd {
            get {
                return this.isOrAndField;
            }
            set {
                this.isOrAndField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFilter {
            get {
                return this.isFilterField;
            }
            set {
                this.isFilterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public enum ConditionType {
        
        /// <remarks/>
        Basic,
        
        /// <remarks/>
        Advanced,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetChartDataCompletedEventHandler(object sender, GetChartDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChartDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChartDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public YieldTrendPlotResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((YieldTrendPlotResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetHintDataCompletedEventHandler(object sender, GetHintDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHintDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHintDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetCubeNamesCompletedEventHandler(object sender, GetCubeNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCubeNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCubeNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetFabListCompletedEventHandler(object sender, GetFabListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFabListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFabListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetDateListCompletedEventHandler(object sender, GetDateListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetTemplateListCompletedEventHandler(object sender, GetTemplateListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetTemplateDetailCompletedEventHandler(object sender, GetTemplateDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CheckIsActiveCompletedEventHandler(object sender, CheckIsActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckIsActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckIsActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591