//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.573.
// 
namespace WebServiceProxy.CategoryProxy {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CategorySoap", Namespace="http://siglaz.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Error))]
    public class Category : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public Category() {
            this.Url = "http://localhost/DDAWebService/Category.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/HelloWorld", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HelloWorld", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndHelloWorld(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/TestConnection_DDADB", RequestElementName="TestConnection_DDADB", RequestNamespace="http://siglaz.com", ResponseElementName="TestConnection_DDADBResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("TestConnection_DDADBResult")]
        public bool TestConnection() {
            object[] results = this.Invoke("TestConnection", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTestConnection(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TestConnection", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndTestConnection(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="TestConnection1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/TestConnection_DDAStagingArea", RequestElementName="TestConnection_DDAStagingArea", RequestNamespace="http://siglaz.com", ResponseElementName="TestConnection_DDAStagingAreaResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("TestConnection_DDAStagingAreaResult")]
        public bool TestConnection(DDADBType type) {
            object[] results = this.Invoke("TestConnection1", new object[] {
                        type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTestConnection1(DDADBType type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TestConnection1", new object[] {
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndTestConnection1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/FabExist", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FabExist(short fabid) {
            object[] results = this.Invoke("FabExist", new object[] {
                        fabid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFabExist(short fabid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FabExist", new object[] {
                        fabid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndFabExist(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/FabInsertName", RequestElementName="FabInsertName", RequestNamespace="http://siglaz.com", ResponseElementName="FabInsertNameResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("FabInsertNameResult")]
        public short FabInsert(string fab) {
            object[] results = this.Invoke("FabInsert", new object[] {
                        fab});
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFabInsert(string fab, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FabInsert", new object[] {
                        fab}, callback, asyncState);
        }
        
        /// <remarks/>
        public short EndFabInsert(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="FabInsert1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/FabInsert", RequestElementName="FabInsert", RequestNamespace="http://siglaz.com", ResponseElementName="FabInsertResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("FabInsertResult")]
        public short FabInsert(Fab objinsert) {
            object[] results = this.Invoke("FabInsert1", new object[] {
                        objinsert});
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFabInsert1(Fab objinsert, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FabInsert1", new object[] {
                        objinsert}, callback, asyncState);
        }
        
        /// <remarks/>
        public short EndFabInsert1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/FabList", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult FabList() {
            object[] results = this.Invoke("FabList", new object[0]);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFabList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FabList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndFabList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetFabByFabID", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Fab GetFabByFabID(string fabid) {
            object[] results = this.Invoke("GetFabByFabID", new object[] {
                        fabid});
            return ((Fab)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFabByFabID(string fabid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFabByFabID", new object[] {
                        fabid}, callback, asyncState);
        }
        
        /// <remarks/>
        public Fab EndGetFabByFabID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Fab)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/StationInsertName", RequestElementName="StationInsertName", RequestNamespace="http://siglaz.com", ResponseElementName="StationInsertNameResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("StationInsertNameResult")]
        public int StationInsert(string station) {
            object[] results = this.Invoke("StationInsert", new object[] {
                        station});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStationInsert(string station, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StationInsert", new object[] {
                        station}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndStationInsert(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="StationInsert1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/StationInsert", RequestElementName="StationInsert", RequestNamespace="http://siglaz.com", ResponseElementName="StationInsertResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("StationInsertResult")]
        public int StationInsert(Station objinsert) {
            object[] results = this.Invoke("StationInsert1", new object[] {
                        objinsert});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStationInsert1(Station objinsert, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StationInsert1", new object[] {
                        objinsert}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndStationInsert1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/StationList", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult StationList() {
            object[] results = this.Invoke("StationList", new object[0]);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStationList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StationList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndStationList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/ProductInsertName", RequestElementName="ProductInsertName", RequestNamespace="http://siglaz.com", ResponseElementName="ProductInsertNameResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ProductInsertNameResult")]
        public int ProductInsert(string Product) {
            object[] results = this.Invoke("ProductInsert", new object[] {
                        Product});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProductInsert(string Product, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProductInsert", new object[] {
                        Product}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndProductInsert(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="ProductInsert1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/ProductInsert", RequestElementName="ProductInsert", RequestNamespace="http://siglaz.com", ResponseElementName="ProductInsertResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ProductInsertResult")]
        public int ProductInsert(Product objinsert) {
            object[] results = this.Invoke("ProductInsert1", new object[] {
                        objinsert});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProductInsert1(Product objinsert, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProductInsert1", new object[] {
                        objinsert}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndProductInsert1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/ProductListDataset", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult ProductListDataset() {
            object[] results = this.Invoke("ProductListDataset", new object[0]);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProductListDataset(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProductListDataset", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndProductListDataset(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/ProductList", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] ProductList() {
            object[] results = this.Invoke("ProductList", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProductList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProductList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndProductList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/ProductDelete", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultBase ProductDelete(int DiskSizeKey) {
            object[] results = this.Invoke("ProductDelete", new object[] {
                        DiskSizeKey});
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProductDelete(int DiskSizeKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProductDelete", new object[] {
                        DiskSizeKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultBase EndProductDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/ProductCanDelete", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductCanDelete(int key) {
            object[] results = this.Invoke("ProductCanDelete", new object[] {
                        key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProductCanDelete(int key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProductCanDelete", new object[] {
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndProductCanDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/WordCellsInsertName", RequestElementName="WordCellsInsertName", RequestNamespace="http://siglaz.com", ResponseElementName="WordCellsInsertNameResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("WordCellsInsertNameResult")]
        public int WordCellsInsert(string wordCell) {
            object[] results = this.Invoke("WordCellsInsert", new object[] {
                        wordCell});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWordCellsInsert(string wordCell, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WordCellsInsert", new object[] {
                        wordCell}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndWordCellsInsert(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="WordCellsInsert1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/WordCellsInsert", RequestElementName="WordCellsInsert", RequestNamespace="http://siglaz.com", ResponseElementName="WordCellsInsertResponse", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("WordCellsInsertResult")]
        public int WordCellsInsert(WordCell objinsert) {
            object[] results = this.Invoke("WordCellsInsert1", new object[] {
                        objinsert});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWordCellsInsert1(WordCell objinsert, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WordCellsInsert1", new object[] {
                        objinsert}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndWordCellsInsert1(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/WordCellsList", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult WordCellsList() {
            object[] results = this.Invoke("WordCellsList", new object[0]);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWordCellsList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WordCellsList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndWordCellsList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/DiskSizesInsert", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DiskSizesInsert(DiskSize objinsert) {
            object[] results = this.Invoke("DiskSizesInsert", new object[] {
                        objinsert});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDiskSizesInsert(DiskSize objinsert, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DiskSizesInsert", new object[] {
                        objinsert}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDiskSizesInsert(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/DiskSizesListDataset", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult DiskSizesListDataset() {
            object[] results = this.Invoke("DiskSizesListDataset", new object[0]);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDiskSizesListDataset(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DiskSizesListDataset", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndDiskSizesListDataset(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/DiskSizesList", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] DiskSizesList() {
            object[] results = this.Invoke("DiskSizesList", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDiskSizesList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DiskSizesList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndDiskSizesList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/ProductDiskSizesListDataset", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult ProductDiskSizesListDataset() {
            object[] results = this.Invoke("ProductDiskSizesListDataset", new object[0]);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProductDiskSizesListDataset(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProductDiskSizesListDataset", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndProductDiskSizesListDataset(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/ProductDiskSizesList", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] ProductDiskSizesList() {
            object[] results = this.Invoke("ProductDiskSizesList", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProductDiskSizesList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProductDiskSizesList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndProductDiskSizesList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/ProductDiskSizeExist", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductDiskSizeExist(string productcode) {
            object[] results = this.Invoke("ProductDiskSizeExist", new object[] {
                        productcode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProductDiskSizeExist(string productcode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProductDiskSizeExist", new object[] {
                        productcode}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndProductDiskSizeExist(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/ProductGetProductClass", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProductGetProductClass(string productcode) {
            object[] results = this.Invoke("ProductGetProductClass", new object[] {
                        productcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProductGetProductClass(string productcode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProductGetProductClass", new object[] {
                        productcode}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndProductGetProductClass(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetProductDiskSize", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDiskSize GetProductDiskSize(string productcode) {
            object[] results = this.Invoke("GetProductDiskSize", new object[] {
                        productcode});
            return ((ProductDiskSize)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProductDiskSize(string productcode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProductDiskSize", new object[] {
                        productcode}, callback, asyncState);
        }
        
        /// <remarks/>
        public ProductDiskSize EndGetProductDiskSize(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ProductDiskSize)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/DiskSizesDelete", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultBase DiskSizesDelete(int DiskSizeKey) {
            object[] results = this.Invoke("DiskSizesDelete", new object[] {
                        DiskSizeKey});
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDiskSizesDelete(int DiskSizeKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DiskSizesDelete", new object[] {
                        DiskSizeKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultBase EndDiskSizesDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/ChannelsInsert", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChannelsInsert(Channel objinsert) {
            object[] results = this.Invoke("ChannelsInsert", new object[] {
                        objinsert});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChannelsInsert(Channel objinsert, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChannelsInsert", new object[] {
                        objinsert}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndChannelsInsert(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/ChannelsList", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult ChannelsList() {
            object[] results = this.Invoke("ChannelsList", new object[0]);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChannelsList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChannelsList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndChannelsList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/SignatureListToDataset", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult SignatureListToDataset() {
            object[] results = this.Invoke("SignatureListToDataset", new object[0]);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSignatureListToDataset(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SignatureListToDataset", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndSignatureListToDataset(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/SignatureList", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SignatureListResult SignatureList() {
            object[] results = this.Invoke("SignatureList", new object[0]);
            return ((SignatureListResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSignatureList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SignatureList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public SignatureListResult EndSignatureList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SignatureListResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/SignatureInsert", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SignatureInsert(Signature objinsert, bool updatebyName, bool skipUpdate) {
            object[] results = this.Invoke("SignatureInsert", new object[] {
                        objinsert,
                        updatebyName,
                        skipUpdate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSignatureInsert(Signature objinsert, bool updatebyName, bool skipUpdate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SignatureInsert", new object[] {
                        objinsert,
                        updatebyName,
                        skipUpdate}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSignatureInsert(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/SignatureDelete", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultBase SignatureDelete(int key) {
            object[] results = this.Invoke("SignatureDelete", new object[] {
                        key});
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSignatureDelete(int key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SignatureDelete", new object[] {
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultBase EndSignatureDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/SignatureCanDelete", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SignatureCanDelete(int key) {
            object[] results = this.Invoke("SignatureCanDelete", new object[] {
                        key});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSignatureCanDelete(int key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SignatureCanDelete", new object[] {
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSignatureCanDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/SignatureGetByKey", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Signature SignatureGetByKey(int key) {
            object[] results = this.Invoke("SignatureGetByKey", new object[] {
                        key});
            return ((Signature)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSignatureGetByKey(int key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SignatureGetByKey", new object[] {
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public Signature EndSignatureGetByKey(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Signature)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/SignatureGetByName", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Signature SignatureGetByName(string signatureName) {
            object[] results = this.Invoke("SignatureGetByName", new object[] {
                        signatureName});
            return ((Signature)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSignatureGetByName(string signatureName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SignatureGetByName", new object[] {
                        signatureName}, callback, asyncState);
        }
        
        /// <remarks/>
        public Signature EndSignatureGetByName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Signature)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetLastUpdateOfTable", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetLastUpdateOfTable(string TableName) {
            object[] results = this.Invoke("GetLastUpdateOfTable", new object[] {
                        TableName});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLastUpdateOfTable(string TableName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLastUpdateOfTable", new object[] {
                        TableName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.DateTime EndGetLastUpdateOfTable(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GetLastUpdateOfDiskSize", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetLastUpdateOfDiskSize() {
            object[] results = this.Invoke("GetLastUpdateOfDiskSize", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLastUpdateOfDiskSize(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLastUpdateOfDiskSize", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.DateTime EndGetLastUpdateOfDiskSize(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/TesterTypesExist", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TesterTypesExist(short testertypeid) {
            object[] results = this.Invoke("TesterTypesExist", new object[] {
                        testertypeid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTesterTypesExist(short testertypeid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TesterTypesExist", new object[] {
                        testertypeid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndTesterTypesExist(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/TesterTypesInsert", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public short TesterTypesInsert(string testertype) {
            object[] results = this.Invoke("TesterTypesInsert", new object[] {
                        testertype});
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTesterTypesInsert(string testertype, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TesterTypesInsert", new object[] {
                        testertype}, callback, asyncState);
        }
        
        /// <remarks/>
        public short EndTesterTypesInsert(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((short)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/TesterTypesList", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult TesterTypesList() {
            object[] results = this.Invoke("TesterTypesList", new object[0]);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTesterTypesList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("TesterTypesList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndTesterTypesList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GradesListToDataset", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSetResult GradesListToDataset() {
            object[] results = this.Invoke("GradesListToDataset", new object[0]);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGradesListToDataset(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GradesListToDataset", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public DataSetResult EndGradesListToDataset(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DataSetResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GradesList", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GradesList() {
            object[] results = this.Invoke("GradesList", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGradesList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GradesList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGradesList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GradeMappingGetSignatureKey", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GradeMappingGetSignatureKey(int gradekey) {
            object[] results = this.Invoke("GradeMappingGetSignatureKey", new object[] {
                        gradekey});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGradeMappingGetSignatureKey(int gradekey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GradeMappingGetSignatureKey", new object[] {
                        gradekey}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGradeMappingGetSignatureKey(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GradeMappingGetSignature", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SignatureListResult GradeMappingGetSignature(int gradekey) {
            object[] results = this.Invoke("GradeMappingGetSignature", new object[] {
                        gradekey});
            return ((SignatureListResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGradeMappingGetSignature(int gradekey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GradeMappingGetSignature", new object[] {
                        gradekey}, callback, asyncState);
        }
        
        /// <remarks/>
        public SignatureListResult EndGradeMappingGetSignature(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SignatureListResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GradesInsert", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GradesInsert(Grade objinsert) {
            object[] results = this.Invoke("GradesInsert", new object[] {
                        objinsert});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGradesInsert(Grade objinsert, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GradesInsert", new object[] {
                        objinsert}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGradesInsert(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GradesDelete", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultBase GradesDelete(int key) {
            object[] results = this.Invoke("GradesDelete", new object[] {
                        key});
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGradesDelete(int key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GradesDelete", new object[] {
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultBase EndGradesDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultBase)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/GradeMappingGetUnknownSignature", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SignatureListResult GradeMappingGetUnknownSignature() {
            object[] results = this.Invoke("GradeMappingGetUnknownSignature", new object[0]);
            return ((SignatureListResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGradeMappingGetUnknownSignature(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GradeMappingGetUnknownSignature", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public SignatureListResult EndGradeMappingGetUnknownSignature(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SignatureListResult)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/ApplicationDataInsert", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApplicationDataInsert(string key, string val) {
            this.Invoke("ApplicationDataInsert", new object[] {
                        key,
                        val});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginApplicationDataInsert(string key, string val, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ApplicationDataInsert", new object[] {
                        key,
                        val}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndApplicationDataInsert(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://siglaz.com/ApplicationDataGetValue", RequestNamespace="http://siglaz.com", ResponseNamespace="http://siglaz.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object ApplicationDataGetValue(string key) {
            object[] results = this.Invoke("ApplicationDataGetValue", new object[] {
                        key});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginApplicationDataGetValue(string key, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ApplicationDataGetValue", new object[] {
                        key}, callback, asyncState);
        }
        
        /// <remarks/>
        public object EndApplicationDataGetValue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public enum DDADBType {
        
        /// <remarks/>
        DDADB,
        
        /// <remarks/>
        DDAStagingArea,
        
        /// <remarks/>
        DDAArchives,
        
        /// <remarks/>
        DDADataMarts,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public class Fab {
        
        /// <remarks/>
        public string FabID;
        
        /// <remarks/>
        public string Description;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public class Grade {
        
        /// <remarks/>
        public int Gradekey;
        
        /// <remarks/>
        public int GradeID;
        
        /// <remarks/>
        public string GradeDescription;
        
        /// <remarks/>
        public object[] SignatureKeyList;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public class Channel {
        
        /// <remarks/>
        public int ChannelID;
        
        /// <remarks/>
        public string ChannelName;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public class ProductDiskSize {
        
        /// <remarks/>
        public int DiskSizeKey;
        
        /// <remarks/>
        public string Prod_Class;
        
        /// <remarks/>
        public string ProductCode;
        
        /// <remarks/>
        public System.Double InnerDiameter;
        
        /// <remarks/>
        public System.Double OuterDiameter;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public class DiskSize {
        
        /// <remarks/>
        public int DiskSizeKey;
        
        /// <remarks/>
        public string Prod_Class;
        
        /// <remarks/>
        public System.Double InnerDiameter;
        
        /// <remarks/>
        public System.Double OuterDiameter;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public class WordCell {
        
        /// <remarks/>
        public string WordCellID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public class Product {
        
        /// <remarks/>
        public int ProductKey;
        
        /// <remarks/>
        public string ProductCode;
        
        /// <remarks/>
        public string Prod_Class;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public class Station {
        
        /// <remarks/>
        public string StationName;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public class Signature {
        
        /// <remarks/>
        public int SignatureID;
        
        /// <remarks/>
        public int SCKey;
        
        /// <remarks/>
        public string SignatureName;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SignatureListResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResultBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSetResult))]
    public class Error {
        
        /// <remarks/>
        public ErrorCode Code;
        
        /// <remarks/>
        public string Description;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public enum ErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        UNKNOWN_ERROR,
        
        /// <remarks/>
        NO_DATA,
        
        /// <remarks/>
        INVALID_SQL_STATEMENT,
        
        /// <remarks/>
        NO_AUTHORIZED,
        
        /// <remarks/>
        NO_DATA_TO_ANALYZE,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public class SignatureListResult : Error {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("signature")]
        public Signature[] signature;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public class ResultBase : Error {
        
        /// <remarks/>
        public long id64;
        
        /// <remarks/>
        public int id32;
        
        /// <remarks/>
        public short id16;
        
        /// <remarks/>
        public string idstring;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://siglaz.com")]
    public class DataSetResult : Error {
        
        /// <remarks/>
        public System.Data.DataSet Result;
        
        /// <remarks/>
        public int TotalRow;
    }
}
